WEBVTT

00:00:04.319 --> 00:00:06.319
Then, when it came to giving a talk, it's

00:00:06.319 --> 00:00:08.319
made me think about some things that

00:00:08.319 --> 00:00:10.319
transpired between both of

00:00:10.319 --> 00:00:14.319
our societies some decades ago. For

00:00:14.319 --> 00:00:17.319
example, in 1957 when the Soviet Union

00:00:17.319 --> 00:00:19.319
launched Sputnik, the world's first

00:00:19.319 --> 00:00:21.319
man-made satellite that orbited the

00:00:21.319 --> 00:00:24.319
earth successfully. Back in the USA,

00:00:24.319 --> 00:00:27.319
everybody freaked out about this. They

00:00:27.319 --> 00:00:29.319
didn't like being behind in space, and

00:00:29.319 --> 00:00:32.319
said "Oh my god, we got to catch up. We

00:00:32.319 --> 00:00:34.319
have to get a satellite into orbit in 90 days".

00:00:34.319 --> 00:00:38.319
Which seems crazy and it was.

00:00:38.319 --> 00:00:40.319
Our first attempt blew up on the launch pad.

00:00:40.319 --> 00:00:43.319
But the second attempt succeeded, that

00:00:43.319 --> 00:00:46.319
was January 31st 1958. It was almost a

00:00:46.319 --> 00:00:48.319
hundred and twenty days after that

00:00:48.319 --> 00:00:50.319
initial launch. It was pretty fast by

00:00:50.319 --> 00:00:54.319
modern standards. Then, in April 6 1961,

00:00:54.319 --> 00:00:56.319
Yuri Gagarin became the first human being

00:00:56.319 --> 00:01:00.319
to orbit the Earth, and again that

00:01:00.319 --> 00:01:02.319
made news all over the world. Everybody

00:01:02.319 --> 00:01:04.318
was very impressed by that, and back in

00:01:04.318 --> 00:01:07.318
the United States people were upset

00:01:07.318 --> 00:01:09.318
because again we were behind. We were

00:01:09.318 --> 00:01:11.318
behind in what was becoming clear was

00:01:11.318 --> 00:01:14.318
the space race, and we didn't like that.

00:01:14.318 --> 00:01:17.318
And what were we gonna do about it?

00:01:17.318 --> 00:01:21.318
So in late May 1961, one month after

00:01:21.318 --> 00:01:23.318
that flight, our president at the time,

00:01:23.318 --> 00:01:25.318
Kennedy, made a speech to Congress saying

00:01:25.318 --> 00:01:27.318
like, look if we're gonna catch up and

00:01:27.318 --> 00:01:29.318
not be behind forever, we have to do

00:01:29.318 --> 00:01:30.318
something big. We have to commit a lot of

00:01:30.318 --> 00:01:33.318
money, a lot of resources. We're gonna go

00:01:33.318 --> 00:01:35.318
to the Moon, right? And that was kind of a

00:01:35.318 --> 00:01:38.318
crazy idea. And in 1962 he reiterated

00:01:38.318 --> 00:01:41.318
this in a famous public speech and he

00:01:41.318 --> 00:01:42.318
said, look we're gonna go to the Moon

00:01:42.318 --> 00:01:46.318
before the decade is over, and that was crazy.

00:01:46.318 --> 00:01:48.318
It was really crazy because we

00:01:48.318 --> 00:01:50.318
haven't done anything remotely like that.

00:01:50.318 --> 00:01:54.318
But lo and behold, eventually we did. So

00:01:54.318 --> 00:01:59.318
Apollo 11 launched on July 16th 1969,

00:01:59.318 --> 00:02:02.318
before the decade was over, and just this

00:02:02.318 --> 00:02:05.318
year there's a very good documentary

00:02:05.318 --> 00:02:07.317
that came out about this whole mission.

00:02:07.317 --> 00:02:11.317
What it is? It's made of all original

00:02:11.317 --> 00:02:13.317
footage that NASA took

00:02:13.317 --> 00:02:15.317
during the mission, that's been sitting

00:02:15.317 --> 00:02:17.317
away in cupboards and closets, and they

00:02:17.317 --> 00:02:19.317
restored the footage and they sort of

00:02:19.317 --> 00:02:21.317
made a recreation of what it was like to

00:02:21.317 --> 00:02:24.317
live through this mission, and I'm gonna

00:02:24.317 --> 00:02:27.317
play a short excerpt from that

00:02:27.317 --> 00:02:30.317
documentary, just to give you a sense of

00:02:30.317 --> 00:02:32.317
what the scale of this whole thing was like

00:03:22.316 --> 00:03:26.316
It's a lot and it's crazy we went from

00:03:26.316 --> 00:03:28.316
nothing to all that stuff, in something

00:03:28.316 --> 00:03:31.316
like 12 years. Before Sputnik flew, we

00:03:31.316 --> 00:03:32.316
didn't have much of a space program in

00:03:32.316 --> 00:03:34.316
the United States, and in the end we had

00:03:34.316 --> 00:03:36.316
all that stuff. And then of course, after

00:03:36.316 --> 00:03:38.316
that we continued to do space things,

00:03:38.316 --> 00:03:40.316
right? We made this Space Shuttle. It

00:03:40.316 --> 00:03:42.316
seemed like a really cool thing. It's

00:03:42.316 --> 00:03:43.316
like a ship out of science fiction. It

00:03:43.316 --> 00:03:45.316
could like, take off and then land again

00:03:45.316 --> 00:03:47.316
that's so great, right?. The problem is

00:03:47.316 --> 00:03:49.316
actually most of it couldn't land, like

00:03:49.316 --> 00:03:51.316
those tanks in the background there, and

00:03:51.316 --> 00:03:53.316
therefore, it was very expensive to fly

00:03:53.316 --> 00:03:56.316
and it was very unreliable. People died

00:03:56.316 --> 00:03:58.316
on this on a couple of different

00:03:58.316 --> 00:04:00.316
missions and we decided to stop using it

00:04:00.316 --> 00:04:03.316
for all these reasons. So, after that if

00:04:03.316 --> 00:04:06.316
we wanted to put people in orbit ,we had

00:04:06.316 --> 00:04:09.316
to get a ride on the Soyuz and then from

00:04:09.316 --> 00:04:11.316
there the trajectory of our space

00:04:11.316 --> 00:04:15.315
program kept going downwards. And so if

00:04:15.315 --> 00:04:18.315
you talk to somebody like me sometime

00:04:18.315 --> 00:04:21.315
around the year 2002 or 2005, we all had

00:04:21.315 --> 00:04:23.315
this attitude like, isn't it a shame? Like

00:04:23.315 --> 00:04:24.315
the USA used to do all this cool stuff

00:04:24.315 --> 00:04:27.315
in space and now we like don't really do

00:04:27.315 --> 00:04:29.315
anything. And the science fiction future

00:04:29.315 --> 00:04:31.315
that we visualized isn't really going to

00:04:31.315 --> 00:04:34.315
happen, and we don't even see that

00:04:34.315 --> 00:04:36.315
changing and but what can you do about it?

00:04:37.315 --> 00:04:39.315
Oh well, shrug, right? That was just

00:04:39.315 --> 00:04:43.315
everybody's attitude. But not quite

00:04:43.315 --> 00:04:44.315
everybody right. At some point, somebody

00:04:44.315 --> 00:04:47.315
came along who made a bunch of money on

00:04:47.315 --> 00:04:52.315
a website and said: Hey I want to do

00:04:52.315 --> 00:04:54.315
something about this. Despite having no

00:04:54.315 --> 00:04:55.315
rocket experience I'm gonna start a

00:04:55.315 --> 00:04:58.315
company to launch rockets and to do

00:04:58.315 --> 00:04:59.315
bigger stuff than we've ever done before.

00:04:59.315 --> 00:05:02.315
And so here's an excerpt of a video

00:05:02.315 --> 00:05:05.315
about why he did that stuff

00:05:05.315 --> 00:05:10.315
Elon Musk: Then there's becoming a multiplanet

00:05:10.315 --> 00:05:11.315
species and space-faring civilization.

00:05:11.315 --> 00:05:15.314
This is not inevitable. It's very

00:05:15.314 --> 00:05:16.314
important to appreciate this is not

00:05:16.314 --> 00:05:18.314
inevitable. The sustainable energy future

00:05:18.314 --> 00:05:21.314
I think is largely inevitable, but being

00:05:21.314 --> 00:05:23.314
a space-faring civiliazation it

00:05:23.314 --> 00:05:25.314
definitely not inevitable. If you look at

00:05:25.314 --> 00:05:30.314
the progress in space, in 1969 we

00:05:30.314 --> 00:05:32.314
were able to send somebody to the moon.

00:05:32.314 --> 00:05:38.314
1969. Then we had the Space Shuttle.

00:05:38.314 --> 00:05:40.314
The space shuttle could only take people

00:05:40.314 --> 00:05:42.314
to low Earth orbit. Then the Space Shuttle

00:05:42.314 --> 00:05:44.314
retired and the United States could take

00:05:44.314 --> 00:05:48.314
no one to orbit. But so that's the trend.

00:05:48.314 --> 00:05:49.314
The trend it's like down to nothing

00:05:49.314 --> 00:05:54.314
People are mistaken when they

00:05:54.314 --> 00:05:56.314
think that technology just automatically

00:05:56.314 --> 00:05:58.314
improves. It does not automatically

00:05:58.314 --> 00:06:00.314
improve. It only improves if a lot of

00:06:00.314 --> 00:06:02.314
people work very hard to make it better,

00:06:02.314 --> 00:06:06.314
and actually it will, I think, by

00:06:06.314 --> 00:06:10.314
itself degrade, actually. You look at

00:06:10.314 --> 00:06:11.314
great civilizations like ancient Egypt,

00:06:11.314 --> 00:06:13.314
and they were able to make the Pyramids, and

00:06:13.314 --> 00:06:16.314
they forgot how to do that. And the

00:06:16.314 --> 00:06:17.313
Romans they built these incredible

00:06:17.313 --> 00:06:24.313
aqueducts. They forgot how to do it.

00:06:24.313 --> 00:06:26.313
Jonatahan: So, his idea was pretty successful

00:06:26.313 --> 00:06:29.313
and today we're like landing rockets and

00:06:29.313 --> 00:06:31.313
we're seriously talking about doing

00:06:31.313 --> 00:06:33.313
another moon mission as soon as the Year

00:06:33.313 --> 00:06:36.313
2024. We'll see if that actually happens.

00:06:36.313 --> 00:06:38.313
But really talking about it seriously

00:06:38.313 --> 00:06:39.313
and that's a pretty good thing given

00:06:39.313 --> 00:06:43.313
where we were not long ago. So, Elon

00:06:43.313 --> 00:06:45.313
talked about a few things from the past

00:06:45.313 --> 00:06:47.313
that were great achievements that have

00:06:47.313 --> 00:06:48.313
been lost, and I want to go through a

00:06:48.313 --> 00:06:50.313
few more of those to reiterate his point

00:06:50.313 --> 00:06:52.313
that technology automatically degrades.

00:06:52.313 --> 00:06:55.313
This thing here that you see is the

00:06:55.313 --> 00:07:00.313
Lycurgus cup. This was a relic found and

00:07:00.313 --> 00:07:03.313
dated back to the Roman Empire: 380 A.D.

00:07:03.313 --> 00:07:06.313
And it's made of glass and this glass that

00:07:06.313 --> 00:07:08.313
it's made of is the world's earliest

00:07:08.313 --> 00:07:11.313
known nano material. Okay? The color of

00:07:11.313 --> 00:07:14.313
the glass changes based on how you look

00:07:14.313 --> 00:07:16.313
at it. Where the light source is. So,

00:07:16.313 --> 00:07:17.313
if you're looking at it standing in

00:07:17.313 --> 00:07:18.313
front of the glass, and the light source

00:07:18.313 --> 00:07:20.312
is sort of over here with you, so that

00:07:20.312 --> 00:07:21.312
you're seeing it with reflected light,

00:07:21.312 --> 00:07:24.312
then the Goblet is green. But if light is

00:07:24.312 --> 00:07:27.312
passing through, it the Goblet is red.

00:07:27.312 --> 00:07:31.312
They had this in 300 A.D. right? And then

00:07:31.312 --> 00:07:33.312
the Roman Empire fell and that knowledge

00:07:33.312 --> 00:07:37.312
was lost until basically forever.

00:07:37.312 --> 00:07:40.312
The way this worked was actually, you

00:07:40.312 --> 00:07:43.312
know, it got figured out around 1990. The

00:07:43.312 --> 00:07:45.312
glass is suffused with very small

00:07:45.312 --> 00:07:48.312
particles of silver and gold. By very

00:07:48.312 --> 00:07:50.312
small, I mean 50 to 70 nanometers. Which

00:07:50.312 --> 00:07:53.312
is so small you would not be able to see

00:07:53.312 --> 00:07:55.312
them with a physical microscope. You

00:07:55.312 --> 00:07:57.312
would require an electron microscope to

00:07:57.312 --> 00:08:00.312
see these particles, right?. But at some

00:08:00.312 --> 00:08:02.312
point the Roman Empire fell and they

00:08:02.312 --> 00:08:04.312
forgot how to do it.

00:08:04.312 --> 00:08:05.312
A lot of craftsmanship went into this.

00:08:05.312 --> 00:08:08.312
You can see, you know, how its hollowed

00:08:08.312 --> 00:08:09.312
out on the inside where the little guy's

00:08:09.312 --> 00:08:12.312
body is to give him more of a purple

00:08:12.312 --> 00:08:14.312
sheen, as opposed to a red in the

00:08:14.312 --> 00:08:16.312
background. And if you hear people talk

00:08:16.312 --> 00:08:19.312
about this today or you read up on this,

00:08:19.312 --> 00:08:22.311
they can have a dismissive attitude

00:08:22.311 --> 00:08:23.311
toward it, like "Oh, the stupid Romans

00:08:23.311 --> 00:08:25.311
didn't understand technology. They

00:08:25.311 --> 00:08:27.311
probably didn't even know it was silver

00:08:27.311 --> 00:08:29.311
and gold that made this happen. It was

00:08:29.311 --> 00:08:30.311
probably just an accident and they made

00:08:30.311 --> 00:08:32.311
like five of these" right? Which is

00:08:32.311 --> 00:08:34.311
complete nonsense. Like. anybody who

00:08:34.311 --> 00:08:36.311
actually builds things as opposed to

00:08:36.311 --> 00:08:39.311
just writing about them, knows you do not

00:08:39.311 --> 00:08:41.311
get a result this good without a

00:08:41.311 --> 00:08:43.311
constant process of iteration and

00:08:43.311 --> 00:08:45.311
refinement. You can imagine there will be

00:08:45.311 --> 00:08:47.311
some initial accident, like maybe

00:08:47.311 --> 00:08:49.311
somebody wanted to make glass sparkly

00:08:49.311 --> 00:08:51.311
and they tried to put silver and gold in

00:08:51.311 --> 00:08:52.311
it, and then they noticed a little bit of

00:08:52.311 --> 00:08:54.311
discoloration. And they said, like, why is

00:08:54.311 --> 00:08:56.311
that there? And maybe they pursued that.

00:08:56.311 --> 00:08:57.311
Like, what happens when I change the

00:08:57.311 --> 00:08:59.311
proportions? How thick should

00:08:59.311 --> 00:09:02.311
the glass be? Like, engineering results

00:09:02.311 --> 00:09:05.311
this good takes a long time, and what

00:09:05.311 --> 00:09:08.311
that means is that in Rome people were

00:09:08.311 --> 00:09:09.311
doing something that we would recognize

00:09:09.311 --> 00:09:12.311
today as materials science. And then that

00:09:12.311 --> 00:09:17.311
was lost. Other stuff happened. Like, in

00:09:17.311 --> 00:09:18.311
the Byzantine Empire, they had

00:09:18.311 --> 00:09:20.311
flamethrowers, and not like little dinky

00:09:20.311 --> 00:09:22.311
things. They had giant pressurized

00:09:22.311 --> 00:09:25.310
vessels in the bellies of ships that

00:09:25.310 --> 00:09:27.310
shot out a napalm like substance out of

00:09:27.310 --> 00:09:29.310
metal tubes that they would use to

00:09:29.310 --> 00:09:32.310
incinerate neighboring vessels.

00:09:32.310 --> 00:09:34.310
It was napalm-like in the sense that

00:09:34.310 --> 00:09:36.310
water would not put this fire out,

00:09:36.310 --> 00:09:39.310
right? It was a very serious weapon. It was

00:09:39.310 --> 00:09:40.310
a state secret of the Byzantine Empire.

00:09:40.310 --> 00:09:43.310
They used it to defend Constantinople

00:09:43.310 --> 00:09:44.310
over and over again for hundreds of

00:09:44.310 --> 00:09:46.310
years, until one day they couldn't really

00:09:46.310 --> 00:09:47.310
do that anymore,

00:09:47.310 --> 00:09:49.310
for whatever reason, and

00:09:49.310 --> 00:09:52.310
this military secret just faded from

00:09:52.310 --> 00:09:55.310
knowledge. Nobody knows how to do it now.

00:09:55.310 --> 00:09:57.310
Obviously we've reinvented

00:09:57.310 --> 00:10:01.310
flamethrowers, but they're different. But

00:10:01.310 --> 00:10:04.310
this is the Antikythera mechanism, which

00:10:04.310 --> 00:10:07.310
is named after an island in Greece where

00:10:07.310 --> 00:10:09.310
this was found on a sunken ship. It was

00:10:09.310 --> 00:10:11.310
just a corroded hunk of metal or a

00:10:11.310 --> 00:10:13.310
number of corroded hunks of metal. But it

00:10:13.310 --> 00:10:15.310
was very clear, when they were originally

00:10:15.310 --> 00:10:17.310
discovered, that gears were involved and

00:10:17.310 --> 00:10:19.310
over time people analyzed this. They

00:10:19.310 --> 00:10:22.310
realized it's a mechanical calendar that

00:10:22.310 --> 00:10:24.310
was used to say things like you know

00:10:24.310 --> 00:10:26.310
what what year is it, what are the phases

00:10:26.310 --> 00:10:28.309
of the Moon, where are the planets going

00:10:28.309 --> 00:10:30.309
to be right now, when is the next Olympic

00:10:30.309 --> 00:10:34.309
Games, right? And people have run scans on

00:10:34.309 --> 00:10:37.309
on what is left of this and managed to

00:10:37.309 --> 00:10:39.309
deduce what all the gears were in this

00:10:39.309 --> 00:10:41.309
mechanism. And it's very different from

00:10:41.309 --> 00:10:43.309
what I thought. When I first heard news

00:10:43.309 --> 00:10:44.309
about this, I thought like oh they must

00:10:44.309 --> 00:10:46.309
have had some cute little gear things in

00:10:46.309 --> 00:10:49.309
Greece, that's surprising. But let me just

00:10:49.309 --> 00:10:51.309
show you the scale of the generally

00:10:51.309 --> 00:10:54.309
agreed upon reconstruction of what this

00:10:54.309 --> 00:11:20.309
device actually was.

00:11:20.309 --> 00:11:25.309
That seems like a lot of gears, right? But

00:11:25.309 --> 00:12:01.308
wait, there's more.

00:12:01.308 --> 00:12:04.308
So ancient Greece had that. But that is

00:12:04.308 --> 00:12:06.308
not the picture that we have today of

00:12:06.308 --> 00:12:08.308
ancient Greece, right? And the thing to

00:12:08.308 --> 00:12:10.308
realize is: You don't just get here from

00:12:10.308 --> 00:12:12.308
nothing. It's not like one day there

00:12:12.308 --> 00:12:14.308
weren't any gears and then the next day

00:12:14.308 --> 00:12:16.308
some guy makes this, right? You need a

00:12:16.308 --> 00:12:18.308
whole process of science to create

00:12:18.308 --> 00:12:21.308
something that sophisticated. And we

00:12:21.308 --> 00:12:22.308
don't know anything about that today,

00:12:22.308 --> 00:12:27.308
right? All of that was lost. And I could

00:12:27.308 --> 00:12:28.308
go on and on with examples. There's a

00:12:28.308 --> 00:12:29.308
whole bunch of things from history that

00:12:29.308 --> 00:12:32.307
are like this. But we don't have time. I'm

00:12:32.307 --> 00:12:37.307
just want to restate that, right now, we

00:12:37.307 --> 00:12:39.307
live in a very privileged time. Where

00:12:39.307 --> 00:12:42.307
technology has been in a good shape for

00:12:42.307 --> 00:12:45.307
a long time. We see it getting better and

00:12:45.307 --> 00:12:46.307
so we imagine that the natural course of

00:12:46.307 --> 00:12:48.307
history is that technology always

00:12:48.307 --> 00:12:50.307
improves,and that these moments in

00:12:50.307 --> 00:12:52.307
history are just like little blips or

00:12:52.307 --> 00:12:53.307
something that we heard about. But

00:12:53.307 --> 00:12:54.307
they're not just little blips. It's

00:12:54.307 --> 00:12:56.307
actually sort of the regular course of

00:12:56.307 --> 00:13:00.307
world history that great achievements in

00:13:00.307 --> 00:13:02.307
technology just get completely lost,

00:13:02.307 --> 00:13:04.307
because the civilizations that made

00:13:04.307 --> 00:13:07.307
those achievements fell or, you know, have

00:13:07.307 --> 00:13:09.307
this sort of a soft fall, where they fail

00:13:09.307 --> 00:13:10.307
to propagate the knowledge into the

00:13:10.307 --> 00:13:12.307
future, right? Technology goes backward

00:13:12.307 --> 00:13:14.307
all the time and not just in ancient

00:13:14.307 --> 00:13:16.307
history, also in the modern day, right? We

00:13:16.307 --> 00:13:19.307
lose knowledge all the time. So, I'm gonna

00:13:19.307 --> 00:13:20.307
read an excerpt from an interview with

00:13:20.307 --> 00:13:22.307
Bob Colewell, who was the chief

00:13:22.307 --> 00:13:24.307
microprocessor architect at Intel for a

00:13:24.307 --> 00:13:26.307
while. But this interview is from before

00:13:26.307 --> 00:13:28.307
that. It was from the booming days of

00:13:28.307 --> 00:13:29.307
Silicon Valley, when he worked at a

00:13:29.307 --> 00:13:31.307
startup called MultiFlow. They were

00:13:31.307 --> 00:13:33.307
trying to make a very large instruction

00:13:33.307 --> 00:13:35.306
word processor, when that was a new

00:13:35.306 --> 00:13:38.306
experimental idea, and they were having a

00:13:38.306 --> 00:13:39.306
lot of problems. Like, when you try to

00:13:39.306 --> 00:13:42.306
design the chip you're using components

00:13:42.306 --> 00:13:44.306
from other manufacturers, and he just

00:13:44.306 --> 00:13:46.306
couldn't get anything to work reliably.

00:13:46.306 --> 00:13:48.306
And he was like, what what the hell, right?

00:13:48.306 --> 00:13:52.306
So he says: Rich Lething and I made a

00:13:52.306 --> 00:13:54.306
pilgrimage down to Texas Instruments in

00:13:54.306 --> 00:13:57.306
Richardson, Texas and we said: "As best as

00:13:57.306 --> 00:13:58.306
we can tell many of your chips don't

00:13:58.306 --> 00:14:00.306
work properly. And does this come as a

00:14:00.306 --> 00:14:03.306
surprise to you?" I half expected them to

00:14:03.306 --> 00:14:04.306
say, "What, you're out of your mind. You've

00:14:04.306 --> 00:14:07.306
done something wrong. Come on, you don't

00:14:07.306 --> 00:14:08.306
know what you're doing. And go use

00:14:08.306 --> 00:14:11.306
somebody else's chips" But no, they said

00:14:11.306 --> 00:14:14.306
"Yeah, we know. Let me see your list" And

00:14:14.306 --> 00:14:14.306
they looked at the list and

00:14:14.306 --> 00:14:16.306
said: "Well, here's some more that you

00:14:16.306 --> 00:14:19.306
don't know about". And by the way, it

00:14:19.306 --> 00:14:22.306
wasn't just TI. Their parts were no worse

00:14:22.306 --> 00:14:24.306
than anybody else's. Motorola's were no

00:14:24.306 --> 00:14:26.306
good. Fairchild's were no good. They all

00:14:26.306 --> 00:14:29.306
had this problem. And so I asked TI, how

00:14:29.306 --> 00:14:31.306
did the entire industry fall on its face

00:14:31.306 --> 00:14:33.306
at the same time? We are killing

00:14:33.306 --> 00:14:35.306
ourselves trying to workaround the

00:14:35.306 --> 00:14:37.305
shortcomings in your silicon. And the guy

00:14:37.305 --> 00:14:40.305
said, "The first generation of transistor

00:14:40.305 --> 00:14:42.305
logic was done by the old graybeard guys,

00:14:42.305 --> 00:14:44.305
who really knew what they were doing. The

00:14:44.305 --> 00:14:47.305
new generation was done by kids who are

00:14:47.305 --> 00:14:48.305
straight out of school, who didn't know

00:14:48.305 --> 00:14:50.305
to ask what the change in packaging

00:14:50.305 --> 00:14:52.305
would do to inductive spikes" right? So

00:14:52.305 --> 00:14:54.305
when you change the voltage in places on

00:14:54.305 --> 00:14:56.305
a chip, it generates a magnetic field,

00:14:56.305 --> 00:14:57.305
because that's just what happens. And

00:14:57.305 --> 00:14:59.305
when those fields interact across a chip,

00:14:59.305 --> 00:15:03.305
it's bad right. And, you know. the new

00:15:03.305 --> 00:15:05.305
people designing these chips didn't know

00:15:05.305 --> 00:15:09.305
to take that seriously. And that's why

00:15:09.305 --> 00:15:11.305
technology degrades, or it's at least one

00:15:11.305 --> 00:15:13.305
reason, right? It takes a lot of energy

00:15:13.305 --> 00:15:15.305
and effort to communicate from

00:15:15.305 --> 00:15:18.305
generation to generation these important

00:15:18.305 --> 00:15:20.305
things that you need to know in order to

00:15:20.305 --> 00:15:22.305
do a competent job making the technology.

00:15:22.305 --> 00:15:25.305
And there are losses in that

00:15:25.305 --> 00:15:27.305
communication process, almost inevitably.

00:15:27.305 --> 00:15:31.305
And without this generational transfer

00:15:31.305 --> 00:15:33.305
of knowledge, civilizations can die.

00:15:33.305 --> 00:15:35.305
Because of technology that those

00:15:35.305 --> 00:15:38.305
civilizations depend on degrades and

00:15:38.305 --> 00:15:42.304
fails. So let's talk about a civilization

00:15:42.304 --> 00:15:44.304
that fell. Actually, a whole group of

00:15:44.304 --> 00:15:46.304
civilizations. The diagrams I'm going to

00:15:46.304 --> 00:15:48.304
show here, are from a lecture you can

00:15:48.304 --> 00:15:51.304
find on Youtube called "1177 BC, the year

00:15:51.304 --> 00:15:54.304
civilization collapsed" by Eric Cline. And

00:15:54.304 --> 00:15:56.304
we're talking about the Late Bronze Age,

00:15:56.304 --> 00:15:58.304
which was the time of a number of

00:15:58.304 --> 00:16:00.304
civilizations you've heard of probably.

00:16:00.304 --> 00:16:03.304
Like the Egyptians or the Mycenaean,

00:16:03.304 --> 00:16:05.304
Greeks, right? or the Hittites, the

00:16:05.304 --> 00:16:09.304
Babylonians, and so this civilization or

00:16:09.304 --> 00:16:11.304
this network of civilizations was sort

00:16:11.304 --> 00:16:13.304
of spanning Mesopotamia and the

00:16:13.304 --> 00:16:15.304
Mediterranean Sea. And they had developed

00:16:15.304 --> 00:16:18.304
quite a sophisticated network of trade.

00:16:18.304 --> 00:16:21.304
So in this graph here, each of these

00:16:21.304 --> 00:16:23.304
points is one of the civilizations and

00:16:23.304 --> 00:16:25.304
the lines are, you know, established

00:16:25.304 --> 00:16:26.304
communication and trade routes

00:16:26.304 --> 00:16:29.304
between those civilizations, and whereas

00:16:29.304 --> 00:16:31.304
not all of them were connected to all of

00:16:31.304 --> 00:16:33.304
the other ones, they were interconnected

00:16:33.304 --> 00:16:35.304
enough that you could relatively

00:16:35.304 --> 00:16:37.304
efficiently route things

00:16:37.304 --> 00:16:39.304
from one place to another if you needed

00:16:39.304 --> 00:16:43.303
to. And that was very important because

00:16:43.303 --> 00:16:46.303
bronze, which the civilization depended

00:16:46.303 --> 00:16:49.303
on for things like defense, was hard to

00:16:49.303 --> 00:16:51.303
make back then. You had to do it by

00:16:51.303 --> 00:16:54.303
combining copper and tin. And copper was

00:16:54.303 --> 00:16:56.303
relatively hard to find, and was found in

00:16:56.303 --> 00:16:59.303
places like the island of Cyprus. And tin

00:16:59.303 --> 00:17:01.303
was also really hard to find and was

00:17:01.303 --> 00:17:03.303
found very far away from those copper

00:17:03.303 --> 00:17:05.303
places, like in Afghanistan. And so you

00:17:05.303 --> 00:17:08.303
saw you somehow had to persistently ship

00:17:08.303 --> 00:17:10.303
these things around, in order to make

00:17:10.303 --> 00:17:12.303
your bronze, and the other things that

00:17:12.303 --> 00:17:14.303
your society depended on. And nobody's

00:17:14.303 --> 00:17:17.303
sure exactly what happened in this

00:17:17.303 --> 00:17:20.303
collapse, but people believed there was

00:17:20.303 --> 00:17:21.303
some kind of environmental stressor to

00:17:21.303 --> 00:17:23.303
kick it off. Like, there was a huge

00:17:23.303 --> 00:17:26.303
drought possibly, also some floods are

00:17:26.303 --> 00:17:28.303
theorized .And this led to some people

00:17:28.303 --> 00:17:31.303
attacking some other people. And, you know,

00:17:31.303 --> 00:17:33.303
maybe you need to start using your ships

00:17:33.303 --> 00:17:36.303
for defense instead of trading. And,

00:17:36.303 --> 00:17:37.303
basically, you went from all these

00:17:37.303 --> 00:17:40.303
flourishing civilizations, to a hundred

00:17:40.303 --> 00:17:42.303
years later none of them were left. And

00:17:42.303 --> 00:17:44.303
by none of them were left, I don't even

00:17:44.303 --> 00:17:46.302
mean that like the nation-states were

00:17:46.302 --> 00:17:48.302
gone. Like, many of the cities were burned

00:17:48.302 --> 00:17:51.302
to the ground and the languages and

00:17:51.302 --> 00:17:53.302
cultures don't survive, even though they

00:17:53.302 --> 00:17:56.302
wrote by, you know, pressing things into

00:17:56.302 --> 00:17:59.302
stone. Like, nobody was able to translate

00:17:59.302 --> 00:18:01.302
those languages. Even today, we still

00:18:01.302 --> 00:18:04.302
can't translate a lot of them. So, like, so

00:18:04.302 --> 00:18:08.302
much knowledge was lost here, in this

00:18:08.302 --> 00:18:13.302
collapse. We'll get back to it later, but

00:18:13.302 --> 00:18:15.302
so I want to bridge this to the modern

00:18:15.302 --> 00:18:16.302
day in some way. And my thesis for the

00:18:16.302 --> 00:18:18.302
rest of this talk is that software is

00:18:18.302 --> 00:18:21.302
actually in decline right now. It's in,

00:18:21.302 --> 00:18:23.302
maybe, a soft decline that just makes

00:18:23.302 --> 00:18:25.302
things really inconvenient for us. But it

00:18:25.302 --> 00:18:26.302
could lead to a hard decline later on.

00:18:26.302 --> 00:18:29.302
Because our civilization depends on

00:18:29.302 --> 00:18:31.302
software, we put it everywhere. All our

00:18:31.302 --> 00:18:33.302
communication system are software, our

00:18:33.302 --> 00:18:35.302
vehicles are software. So you know, we now

00:18:35.302 --> 00:18:37.302
have airplanes that kill hundreds of

00:18:37.302 --> 00:18:39.302
people due to bad software and bad

00:18:39.302 --> 00:18:40.302
software only, right?

00:18:40.302 --> 00:18:41.302
There was no other problem with

00:18:41.302 --> 00:18:45.302
those airplanes. Now, I don't think most

00:18:45.302 --> 00:18:48.301
people would believe me if I say

00:18:48.301 --> 00:18:49.301
software is in decline. It sure seems

00:18:49.301 --> 00:18:51.301
like it's flourishing so I have to

00:18:51.301 --> 00:18:52.301
convince you

00:18:52.301 --> 00:18:53.301
at least that this is a plausible

00:18:53.301 --> 00:18:55.301
perspective and that's my goal for the

00:18:55.301 --> 00:18:57.301
rest of this talk. And what I'll say

00:18:57.301 --> 00:19:00.301
about that is: these collapses, like we're

00:19:00.301 --> 00:19:01.301
talking about that Bronze Age collapse,

00:19:01.301 --> 00:19:04.301
was massive, like all these civilizations

00:19:04.301 --> 00:19:06.301
were destroyed. But it took a hundred

00:19:06.301 --> 00:19:08.301
years .So if you're at the beginning of

00:19:08.301 --> 00:19:09.301
that collapse, in the first 20 years you

00:19:09.301 --> 00:19:12.301
might think, well, things aren't as good

00:19:12.301 --> 00:19:14.301
as they were 20 years ago, but it's fine,

00:19:14.301 --> 00:19:16.301
we're basically the same, right? But then

00:19:16.301 --> 00:19:18.301
you keep thinking that, you keep thinking

00:19:18.301 --> 00:19:20.301
that. Every 20 years another couple

00:19:20.301 --> 00:19:21.301
cities get burned to the ground, and then,

00:19:21.301 --> 00:19:24.301
eventually, there's like nothing, right?

00:19:24.301 --> 00:19:26.301
The Fall of the Roman Empire was about 300

00:19:26.301 --> 00:19:28.301
years. So, if you're in the middle of a

00:19:28.301 --> 00:19:30.301
very slow collapse like that, would you

00:19:30.301 --> 00:19:32.301
recognize it?, would you know what it

00:19:32.301 --> 00:19:36.301
looked like from the inside? So, of course

00:19:36.301 --> 00:19:37.301
I expect the reply to what I'm saying to

00:19:37.301 --> 00:19:38.301
be: "You're crazy,

00:19:38.301 --> 00:19:40.301
software is doing great! Look at all

00:19:40.301 --> 00:19:42.301
these internet companies that are making

00:19:42.301 --> 00:19:43.301
all this money and changing the way that

00:19:43.301 --> 00:19:46.301
we live, you know?" and I would say: "Yes,

00:19:46.301 --> 00:19:49.301
that is all happening. But what is really

00:19:49.301 --> 00:19:51.300
happening, is that software has been free

00:19:51.300 --> 00:19:56.300
riding on hardware. For the past many

00:19:56.300 --> 00:19:59.300
decades we've had amazing advances in

00:19:59.300 --> 00:20:01.300
hardware technology. Computers keep

00:20:01.300 --> 00:20:04.300
getting faster and faster. It's really

00:20:04.300 --> 00:20:05.300
one of the greatest accomplishments in

00:20:05.300 --> 00:20:07.300
human history, that we've somehow managed

00:20:07.300 --> 00:20:07.300
to do that,

00:20:07.300 --> 00:20:12.300
and software gets better in air quotes,

00:20:12.300 --> 00:20:14.300
because it has better hardware to run on.

00:20:14.300 --> 00:20:17.300
That's the main reason software

00:20:17.300 --> 00:20:20.300
technology itself has not improved in

00:20:20.300 --> 00:20:20.300
quite a while,

00:20:20.300 --> 00:20:23.300
I claim, right? And you can say: "But look

00:20:23.300 --> 00:20:25.300
at all these examples of cool stuff we

00:20:25.300 --> 00:20:27.300
can do. Even in the past couple of years

00:20:27.300 --> 00:20:29.300
so like AlphaGo was an AI that it beated

00:20:29.300 --> 00:20:32.300
human players at Go". And you can go on,

00:20:32.300 --> 00:20:35.300
like "Instagram or whatever app and like

00:20:35.300 --> 00:20:36.300
make your face look like somebody else's

00:20:36.300 --> 00:20:38.300
face, that's crazy. We didn't used to be

00:20:38.300 --> 00:20:42.300
able to do that" And that's true. But one,

00:20:42.300 --> 00:20:45.300
most of these again are products of

00:20:45.300 --> 00:20:47.300
hardware being fast. Most of these cool

00:20:47.300 --> 00:20:49.300
things that we do now are due to Machine

00:20:49.300 --> 00:20:51.300
Learning algorithms and it,

00:20:51.300 --> 00:20:53.299
you know, those really are relying on

00:20:53.299 --> 00:20:55.299
quantity of computation right now to

00:20:55.299 --> 00:20:57.299
produce impressive results. It's hard to

00:20:57.299 --> 00:21:00.299
imagine being able to train AlphaGo 20

00:21:00.299 --> 00:21:01.299
years ago on the computers we had at

00:21:01.299 --> 00:21:04.299
that time, right? So it's not that... there are

00:21:04.299 --> 00:21:06.299
software technology improvements here,

00:21:06.299 --> 00:21:09.299
right? Machine Learning algorithms have

00:21:09.299 --> 00:21:11.299
legitimately gotten better. But there're

00:21:11.299 --> 00:21:17.299
two things to say about that. Well, the

00:21:17.299 --> 00:21:19.299
main thing to say about it, I will say, is

00:21:19.299 --> 00:21:21.299
just that it's a minority of actual

00:21:21.299 --> 00:21:24.299
software technology, right? So, of the

00:21:24.299 --> 00:21:26.299
volume of things that we run, the thing

00:21:26.299 --> 00:21:28.299
that runs the Machine Learning algorithm

00:21:28.299 --> 00:21:30.299
that produces the actual impressive

00:21:30.299 --> 00:21:32.299
result is a very small piece of the

00:21:32.299 --> 00:21:35.299
program. It's actually really simple, once

00:21:35.299 --> 00:21:37.299
you understand the math, and, especially

00:21:37.299 --> 00:21:38.299
if you don't have to train it, if you

00:21:38.299 --> 00:21:41.299
just have to use it, right? And so when

00:21:41.299 --> 00:21:43.299
you take an app on your phone like that,

00:21:43.299 --> 00:21:44.299
that does something funny with your

00:21:44.299 --> 00:21:46.299
picture, The part of it that does the

00:21:46.299 --> 00:21:48.299
thing that we think is cool and really

00:21:48.299 --> 00:21:50.299
value. That piece of software is

00:21:50.299 --> 00:21:53.299
tremendously simple, compared to all the

00:21:53.299 --> 00:21:55.298
stuff about like, loading the bitmap for

00:21:55.298 --> 00:21:58.298
your face or responding to user input

00:21:58.298 --> 00:22:01.298
events, right? That part of the software

00:22:01.298 --> 00:22:03.298
is huge and complicated and is the part

00:22:03.298 --> 00:22:05.298
that's kind of falling apart. So I would

00:22:05.298 --> 00:22:07.298
characterize software as having small

00:22:07.298 --> 00:22:10.298
local technological improvements, like

00:22:10.298 --> 00:22:13.298
Machine Learning, with overall inertia or

00:22:13.298 --> 00:22:15.298
degradation in the rest of the field. And

00:22:15.298 --> 00:22:17.298
we're very impressed by the improvements,

00:22:17.298 --> 00:22:20.298
though, right? And let me illustrate the

00:22:20.298 --> 00:22:24.298
degradation parts as best I can and it's

00:22:24.298 --> 00:22:26.298
to say that we simply don't expect

00:22:26.298 --> 00:22:28.298
software to work anymore. And I'm not

00:22:28.298 --> 00:22:30.298
sure when this happened, you know.

00:22:30.298 --> 00:22:32.298
Computers always had a reputation for

00:22:32.298 --> 00:22:34.298
being a little bit funny. But, you know,

00:22:34.298 --> 00:22:36.298
if you go back many decades ago, it was

00:22:36.298 --> 00:22:39.298
generally due to like, not being user

00:22:39.298 --> 00:22:41.298
friendly or hard to understand how to

00:22:41.298 --> 00:22:44.298
use it. But today, if you're using a

00:22:44.298 --> 00:22:45.298
program and it does something wrong,

00:22:45.298 --> 00:22:47.298
you're just like "yeah it's software,

00:22:47.298 --> 00:22:52.298
restart it whatever". And that didn't used

00:22:52.298 --> 00:22:56.298
to be. And if our standards are shrinking

00:22:56.298 --> 00:22:58.297
over time, how low can they shrink before

00:22:58.297 --> 00:23:01.297
it becomes unsustainable? So, I decided to

00:23:01.297 --> 00:23:03.297
say, you know, I want to quantify or

00:23:03.297 --> 00:23:04.297
illustrates

00:23:04.297 --> 00:23:06.297
how much I put up with this from day to

00:23:06.297 --> 00:23:08.297
day. So from now on I'm just gonna take a

00:23:08.297 --> 00:23:10.297
screenshot every time any piece of

00:23:10.297 --> 00:23:12.297
software that I use has an obvious bug

00:23:12.297 --> 00:23:15.297
or, you know, unintuitive or incorrect

00:23:15.297 --> 00:23:18.297
piece of behavior. And, well, I write it,

00:23:18.297 --> 00:23:20.297
right? When I decided that I was working

00:23:20.297 --> 00:23:23.297
on my compiler in the command line and

00:23:23.297 --> 00:23:26.297
the console that I use, after a while,

00:23:26.297 --> 00:23:27.297
just start saying "attempt to index a

00:23:27.297 --> 00:23:29.297
null value" in the prompt, because it's

00:23:29.297 --> 00:23:32.297
written in Lua for some reason. Then, I go

00:23:32.297 --> 00:23:34.297
to Emacs and I'm working on my code and

00:23:34.297 --> 00:23:37.297
Emacs is set to reload files that have

00:23:37.297 --> 00:23:39.297
been modified and that used to work fine,

00:23:39.297 --> 00:23:41.297
but at some point they broke it so that

00:23:41.297 --> 00:23:43.297
it reloads the file too early and

00:23:43.297 --> 00:23:45.297
doesn't get the whole thing and half of

00:23:45.297 --> 00:23:46.297
it is cut off. And I have to, like,

00:23:46.297 --> 00:23:48.297
manually reset that every time it

00:23:48.297 --> 00:23:52.297
happens. Then I go to Gmail and I'm going

00:23:52.297 --> 00:23:53.297
to send an email to the rest of the team

00:23:53.297 --> 00:23:55.297
about some graphics stuff, making

00:23:55.297 --> 00:23:57.297
decisions about what to do, and I copy a

00:23:57.297 --> 00:24:00.296
line of a previous email and paste it

00:24:00.296 --> 00:24:02.296
into the reply box. And then I start

00:24:02.296 --> 00:24:04.296
typing my reply and it goes into like a

00:24:04.296 --> 00:24:06.296
three character wide column over here,

00:24:06.296 --> 00:24:08.296
because somehow they've managed to

00:24:08.296 --> 00:24:09.296
reproduce all the kinds of stupid

00:24:09.296 --> 00:24:11.296
Microsoft Word formatting bugs that

00:24:11.296 --> 00:24:13.296
everyone was frustrated with in the 90s

00:24:13.296 --> 00:24:16.296
and 2000's, now those are in Gmail. And I

00:24:16.296 --> 00:24:18.296
don't know how to fix it. Like, you fight

00:24:18.296 --> 00:24:19.296
with it for a while to get it to stop

00:24:19.296 --> 00:24:21.296
happening, you have to like delete

00:24:21.296 --> 00:24:24.296
something invisible, I don't know. Very

00:24:24.296 --> 00:24:25.296
annoying. So then I say, okay I'm gonna

00:24:25.296 --> 00:24:27.296
get some real programming done. I go to

00:24:27.296 --> 00:24:29.296
Visual Studio and I say I'm going to

00:24:29.296 --> 00:24:31.296
type in my command-line arguments up

00:24:31.296 --> 00:24:34.296
there. And, as soon as I do that, we get

00:24:34.296 --> 00:24:37.296
this box that says "hey, collection was

00:24:37.296 --> 00:24:40.296
modified, enumeration option may not, your

00:24:40.296 --> 00:24:43.296
operation may not execute" Why? I don't

00:24:43.296 --> 00:24:46.296
exactly know why. That's a problem, like

00:24:46.296 --> 00:24:48.296
I'm just telling it, a string, we're not

00:24:48.296 --> 00:24:49.296
even trying to do anything with the

00:24:49.296 --> 00:24:51.296
string. It's just like, save this for

00:24:51.296 --> 00:24:52.296
later. For when we want to run the

00:24:52.296 --> 00:24:54.296
program, but apparently that's too hard,

00:24:54.296 --> 00:24:56.296
right? And this is far from the only

00:24:56.296 --> 00:24:58.296
problem with Visual Studio. Visual Studio

00:24:58.296 --> 00:25:01.296
has many many bugs, but this is the

00:25:01.296 --> 00:25:03.295
funniest one. Because it's so simple what

00:25:03.295 --> 00:25:06.295
I'm trying to do and it can't do it all

00:25:06.295 --> 00:25:08.295
the time. This, I don't know what

00:25:08.295 --> 00:25:09.295
percentage of the time this happens. It's

00:25:09.295 --> 00:25:13.295
probably like 5%, I don't know, 4%. So then

00:25:13.295 --> 00:25:14.295
I decide to break off. Blow off some

00:25:14.295 --> 00:25:16.295
steam and play some games. So let me

00:25:16.295 --> 00:25:17.295
download a game on the

00:25:17.295 --> 00:25:20.295
Epic store, but we're unable to start the

00:25:20.295 --> 00:25:22.295
download for some reason. So maybe I'll

00:25:22.295 --> 00:25:24.295
go to Steam, because that's a more

00:25:24.295 --> 00:25:27.295
reliable, longer-lasting store. And I'm

00:25:27.295 --> 00:25:28.295
able to actually download a game, but

00:25:28.295 --> 00:25:30.295
then when I go to the install window

00:25:30.295 --> 00:25:31.295
it's just like a black window and I have

00:25:31.295 --> 00:25:33.295
to restart Steam to play the game. Then I

00:25:33.295 --> 00:25:35.295
managed to play the game and then I all

00:25:35.295 --> 00:25:37.295
tap out for a second to check something

00:25:37.295 --> 00:25:39.295
and then now full screen is all messed

00:25:39.295 --> 00:25:40.295
up and the game's like up in the corner

00:25:40.295 --> 00:25:43.295
of a window, right? And then I have to

00:25:43.295 --> 00:25:44.295
restart the game to get full screen

00:25:44.295 --> 00:25:46.295
again. And then I'm watching some

00:25:46.295 --> 00:25:47.295
 Counter Strike there was a really good

00:25:47.295 --> 00:25:49.295
match between Cloud 9 and Luminosity

00:25:49.295 --> 00:25:53.295
gaming about a month ago. And, but for the

00:25:53.295 --> 00:25:55.295
entire match there was a mysterious sixth

00:25:55.295 --> 00:25:57.295
player on the cloud 9 side called

00:25:57.295 --> 00:25:59.295
undefined. Up in the corner there. Let me

00:25:59.295 --> 00:26:00.295
zoom in on that map for you

00:26:00.295 --> 00:26:02.295
Counter Strike fans. Undefined is on

00:26:02.295 --> 00:26:04.295
the left. A hundred thousand people were

00:26:04.295 --> 00:26:06.294
watching this match and it was there the

00:26:06.294 --> 00:26:09.294
whole time. I was thinking about a game I

00:26:09.294 --> 00:26:11.294
like called Ultima 4, so I went to this

00:26:11.294 --> 00:26:13.294
website that had the map. And the map was

00:26:13.294 --> 00:26:15.294
like screwed up because he was like

00:26:15.294 --> 00:26:17.294
wrapping into extra lines, so I opened a

00:26:17.294 --> 00:26:19.294
different browser to see it correctly. I

00:26:19.294 --> 00:26:21.294
needed to get a visa to come to the

00:26:21.294 --> 00:26:23.294
Russian Federation, so I go to the visa

00:26:23.294 --> 00:26:26.294
site, and I start typing my information

00:26:26.294 --> 00:26:27.294
and, maybe, I typed out my phone number. I

00:26:27.294 --> 00:26:29.294
put the plus one and it didn't like it

00:26:29.294 --> 00:26:31.294
or something. So it says phone number is

00:26:31.294 --> 00:26:34.294
invalid over here but I couldn't fix the

00:26:34.294 --> 00:26:36.294
phone number no matter what I put in. It

00:26:36.294 --> 00:26:37.294
wouldn't accept it because whatever the

00:26:37.294 --> 00:26:39.294
variable was for phone number is invalid

00:26:39.294 --> 00:26:42.294
would never get reset. So I had to, like

00:26:42.294 --> 00:26:45.294
stop the application, close the website.

00:26:45.294 --> 00:26:47.294
Like, clear my cookies go back and

00:26:47.294 --> 00:26:49.294
reapply in order to be able to. And be

00:26:49.294 --> 00:26:51.294
very careful when I was typing my phone

00:26:51.294 --> 00:26:55.294
number. There are just so many of these. All

00:26:55.294 --> 00:26:57.294
of this was within a couple days. Like, I

00:26:57.294 --> 00:26:59.294
didn't have to try hard to find these,

00:26:59.294 --> 00:27:01.294
right? I just had to stop collecting them.

00:27:01.294 --> 00:27:05.294
But then, I come here and as if to give

00:27:05.294 --> 00:27:07.294
me more examples in this talk. So here in

00:27:07.294 --> 00:27:09.293
this hotel where I've been writing this

00:27:09.293 --> 00:27:11.293
talk for a couple days, they have this

00:27:11.293 --> 00:27:13.293
software controlled heating and lighting

00:27:13.293 --> 00:27:15.293
system. Where it's like, you kind of push

00:27:15.293 --> 00:27:17.293
the non button buttons and things happenm

00:27:17.293 --> 00:27:20.293
and some percentage of the time, not all

00:27:20.293 --> 00:27:23.293
the time, when I turn the air

00:27:23.293 --> 00:27:27.293
conditioning on or off, the phone rings.

00:27:27.293 --> 00:27:29.293
It's not a full ring even, it's just like

00:27:29.293 --> 00:27:30.293
a little blue bubble and then it stops.

00:27:30.293 --> 00:27:33.293
But I know it's not intentional, because

00:27:33.293 --> 00:27:35.293
it doesn't happen every time. And I am

00:27:35.293 --> 00:27:36.293
NOT making this up.

00:27:36.293 --> 00:27:38.293
this actually happens in my room, right?

00:27:38.293 --> 00:27:42.293
Now, ok, and then for this talk two

00:27:42.293 --> 00:27:43.293
hours ago,

00:27:43.293 --> 00:27:45.293
I was working at the last minute to make

00:27:45.293 --> 00:27:47.293
a diagram and I downloaded a fully

00:27:47.293 --> 00:27:49.293
legitimate licensed Creative Cloud

00:27:49.293 --> 00:27:52.293
Photoshop to my machine. The first thing

00:27:52.293 --> 00:27:54.293
I do is go to  File, New Document. BAM, the new

00:27:54.293 --> 00:27:56.293
document extension could not be loaded

00:27:56.293 --> 00:27:59.293
because of a program error, right? And so

00:27:59.293 --> 00:28:01.293
my whole point, though, is we are not

00:28:01.293 --> 00:28:04.293
surprised by any of this. My other point

00:28:04.293 --> 00:28:06.293
is that it's getting worse over time. So

00:28:06.293 --> 00:28:10.292
try this everyday yourself because we've

00:28:10.292 --> 00:28:12.292
gotten used to it. I didn't even think it

00:28:12.292 --> 00:28:14.292
would be as much when I had the idea to

00:28:14.292 --> 00:28:15.292
record this. I didn't think it would be

00:28:15.292 --> 00:28:17.292
as much as it was. Try counting for

00:28:17.292 --> 00:28:19.292
yourself just everyday, just make a

00:28:19.292 --> 00:28:21.292
little list of all these things and I

00:28:21.292 --> 00:28:22.292
think you'll be surprised how many there

00:28:22.292 --> 00:28:25.292
are. I don't know if anyone knows what

00:28:25.292 --> 00:28:27.292
this phrase means: "five nines". I'm sure a

00:28:27.292 --> 00:28:29.292
lot of people don't. This used to be a

00:28:29.292 --> 00:28:33.292
very common phrase in the 1990s and

00:28:33.292 --> 00:28:34.292
2000s when people wanted to sell you

00:28:34.292 --> 00:28:39.292
software or a hardware system. What it

00:28:39.292 --> 00:28:41.292
means is this system is up and working,

00:28:41.292 --> 00:28:44.292
and available 99.999% of the time, right?

00:28:44.292 --> 00:28:46.292
Four nines, would be ninety-nine point

00:28:46.292 --> 00:28:49.292
nine nine whatever. And we don't use this

00:28:49.292 --> 00:28:53.292
anymore. I think, in part, because the

00:28:53.292 --> 00:28:54.292
number of nines would be going down. And

00:28:54.292 --> 00:28:58.292
we can't make it go up again and nobody,

00:28:58.292 --> 00:29:00.292
well, certain parties, don't seem to care.

00:29:00.292 --> 00:29:02.292
So I was, you know, working on this speech

00:29:02.292 --> 00:29:06.292
for about the past week and twice,

00:29:06.292 --> 00:29:08.292
once when I was asleep on the airplane

00:29:08.292 --> 00:29:10.292
and once the other night in the room, my

00:29:10.292 --> 00:29:12.292
laptop just rebooted while it was in

00:29:12.292 --> 00:29:14.291
sleep mode and just killed all my

00:29:14.291 --> 00:29:17.291
programs and stuff. I guess cuz it was an

00:29:17.291 --> 00:29:18.291
update, maybe it wasn't an update. Maybe

00:29:18.291 --> 00:29:20.291
it was just the operating system failing.

00:29:20.291 --> 00:29:22.291
But I think it was an update. So that

00:29:22.291 --> 00:29:24.291
automatically takes my laptop down to

00:29:24.291 --> 00:29:26.291
like three 9s or less, less than three

00:29:26.291 --> 00:29:28.291
nines. And if the laptop is less than

00:29:28.291 --> 00:29:30.291
three 9s nothing running on it could be

00:29:30.291 --> 00:29:33.291
three or four or five nines, right? So

00:29:33.291 --> 00:29:37.291
we've even lost the rhetoric of quality

00:29:37.291 --> 00:29:39.291
that we used to have, ¿right? and so if you

00:29:39.291 --> 00:29:40.291
say this,

00:29:40.291 --> 00:29:43.291
the software is buggy, then people like

00:29:43.291 --> 00:29:45.291
web programmers or Hacker News people or

00:29:45.291 --> 00:29:47.291
whatever, will say "Yeah, we know. But the

00:29:47.291 --> 00:29:51.291
market won't pay for it, right? Like, we

00:29:51.291 --> 00:29:53.291
could make software better. But that

00:29:53.291 --> 00:29:56.291
takes time and money to fix the bugs and

00:29:56.291 --> 00:30:00.291
all that stuff and our client won't pay

00:30:00.291 --> 00:30:02.291
for it or the market punishes that,

00:30:02.291 --> 00:30:03.291
because you take longer to get to market"

00:30:03.291 --> 00:30:06.291
And that's true to some extent. I could

00:30:06.291 --> 00:30:08.291
definitely argue with some parts of it.

00:30:08.291 --> 00:30:10.291
But here's the thing that I'm thinking

00:30:10.291 --> 00:30:13.291
today. If you haven't seen an entire

00:30:13.291 --> 00:30:16.290
industry produce robust software for

00:30:16.290 --> 00:30:18.290
decades, what makes you think they

00:30:18.290 --> 00:30:20.290
actually can? right? They're saying we

00:30:20.290 --> 00:30:22.290
could do it if we wanted to, but we're

00:30:22.290 --> 00:30:24.290
just totally not. But, why would I believe

00:30:24.290 --> 00:30:26.290
that they actually can do it, right?

00:30:26.290 --> 00:30:28.290
Because, like we've said there's this

00:30:28.290 --> 00:30:30.290
generational transmission of knowledge

00:30:30.290 --> 00:30:33.290
factor that I don't think is being

00:30:33.290 --> 00:30:35.290
passed along, right? So I think the

00:30:35.290 --> 00:30:37.290
knowledge of how to make things less

00:30:37.290 --> 00:30:43.290
buggy is lost. And even the knowledge of

00:30:43.290 --> 00:30:44.290
a technology company has changed and

00:30:44.290 --> 00:30:46.290
again this illustrates the difference

00:30:46.290 --> 00:30:49.290
between software and hardware. Hardware

00:30:49.290 --> 00:30:51.290
technology companies used to be a place

00:30:51.290 --> 00:30:54.290
that makes advanced materials or defiant,

00:30:54.290 --> 00:30:56.290
you know, designs new radar or like does

00:30:56.290 --> 00:30:58.290
something but you didn't use to be able

00:30:58.290 --> 00:30:59.290
to do before, right?

00:30:59.290 --> 00:31:02.290
So now in Silicon Valley and as

00:31:02.290 --> 00:31:03.290
nearly as I could tell around the world.

00:31:03.290 --> 00:31:08.290
a software quote tech company is just a

00:31:08.290 --> 00:31:10.290
company that does stuff with computers,

00:31:10.290 --> 00:31:13.290
and is then hoping to stumble into a

00:31:13.290 --> 00:31:15.290
market niche that it can exploit. And the

00:31:15.290 --> 00:31:17.290
point is the market niche. The point

00:31:17.290 --> 00:31:20.289
isn't the software, and the point is

00:31:20.289 --> 00:31:22.289
especially not designing higher tech

00:31:22.289 --> 00:31:25.289
software that pushes the threshold of

00:31:25.289 --> 00:31:26.289
technology forward. Which is what

00:31:26.289 --> 00:31:29.289
hardware companies always used to do. And

00:31:29.289 --> 00:31:31.289
so, we've even corrupted the words

00:31:31.289 --> 00:31:36.289
tech company, right? Ok, so now I want to

00:31:36.289 --> 00:31:39.289
bring it a little closer to what we do.

00:31:39.289 --> 00:31:41.289
There's been this sequence of

00:31:41.289 --> 00:31:43.289
abstraction that we've gone through as

00:31:43.289 --> 00:31:45.289
programmers over the decades, right?

00:31:45.289 --> 00:31:46.289
Originally, you had to program your

00:31:46.289 --> 00:31:50.289
computer in machine language, then there

00:31:50.289 --> 00:31:53.289
was assembly language, then we had the

00:31:53.289 --> 00:31:53.289
sequence of

00:31:53.289 --> 00:31:55.289
higher level languages, like Fortran and C

00:31:55.289 --> 00:31:58.289
or C++. And nowadays we have stuff like

00:31:58.289 --> 00:32:01.289
C# or Haskell or JavaScript, that

00:32:01.289 --> 00:32:02.289
are even further away from the machine.

00:32:02.289 --> 00:32:06.289
And the justification for this is like,

00:32:06.289 --> 00:32:09.289
look that we're working at a higher

00:32:09.289 --> 00:32:11.289
level of abstraction, the higher your

00:32:11.289 --> 00:32:12.289
level of abstraction, the more you work

00:32:12.289 --> 00:32:14.289
you get done, because you don't have to

00:32:14.289 --> 00:32:15.289
worry about scheduling machine

00:32:15.289 --> 00:32:17.289
instructions and stuff. So, we're really

00:32:17.289 --> 00:32:19.289
being smart and we're saving effort. And

00:32:19.289 --> 00:32:21.288
I think that's actually true. Like, I

00:32:21.288 --> 00:32:23.288
don't think we want to program things in

00:32:23.288 --> 00:32:25.288
assembly language. That's a waste of time.

00:32:25.288 --> 00:32:28.288
But somewhere through this chain, it

00:32:28.288 --> 00:32:30.288
becomes wrong. And that's how people

00:32:30.288 --> 00:32:32.288
are wrong a lot of the times, right? Like,

00:32:32.288 --> 00:32:33.288
you start out by being right and then

00:32:33.288 --> 00:32:35.288
you extrapolate it too far into wrong

00:32:35.288 --> 00:32:40.288
territory. But the important thing to all

00:32:40.288 --> 00:32:42.288
of this is that we only see one side of it.

00:32:42.288 --> 00:32:44.288
We see that we're being smart and

00:32:44.288 --> 00:32:47.288
saving effort, and we don't see the flip

00:32:47.288 --> 00:32:49.288
side of all of these things. Which is

00:32:49.288 --> 00:32:50.288
that there's a corresponding loss of

00:32:50.288 --> 00:32:53.288
capability, right? Because I don't program

00:32:53.288 --> 00:32:56.288
in assembly anymore, I no longer am able

00:32:56.288 --> 00:33:00.288
to program in assembly, right? if I don't,

00:33:00.288 --> 00:33:03.288
you know, if I use languages that

00:33:03.288 --> 00:33:06.288
are too high level, and have a little bit

00:33:06.288 --> 00:33:08.288
lazy, as people often are, I don't know

00:33:08.288 --> 00:33:10.288
where my variables live in memory or

00:33:10.288 --> 00:33:12.288
what they look like or even how remotely

00:33:12.288 --> 00:33:14.288
how big they are, right? I certainly don't

00:33:14.288 --> 00:33:16.288
know what the CPU is doing in response

00:33:16.288 --> 00:33:19.288
to the code that I've written. I may be

00:33:19.288 --> 00:33:21.288
scared to use non-managed languages,

00:33:21.288 --> 00:33:22.288
because the very idea of memory

00:33:22.288 --> 00:33:24.287
allocation just seems too hard and scary.

00:33:24.287 --> 00:33:27.287
Or even if I'm a person who programs in

00:33:27.287 --> 00:33:29.287
a non managed language, maybe I'm afraid

00:33:29.287 --> 00:33:31.287
of pointers and start generating this

00:33:31.287 --> 00:33:34.287
cult of of being afraid of pointers and

00:33:34.287 --> 00:33:35.287
what to do about that, like the modern

00:33:35.287 --> 00:33:38.287
C++ people do, right? And so the rhetoric

00:33:38.287 --> 00:33:40.287
that we have is I'm being smart,

00:33:40.287 --> 00:33:42.287
I shouldn't have to do the low-level stuff,

00:33:42.287 --> 00:33:46.287
right? But part of the reality is the

00:33:46.287 --> 00:33:48.287
loss of capability that corresponds to

00:33:48.287 --> 00:33:50.287
those choices, and both of those things

00:33:50.287 --> 00:33:52.287
can be true at the same time. I'm not

00:33:52.287 --> 00:33:54.287
saying that we're not being smart by

00:33:54.287 --> 00:33:57.287
going up some level, well a little bit. I mean

00:33:57.287 --> 00:33:58.287
there's a problem, which is at the point

00:33:58.287 --> 00:34:00.287
of going up all these levels is supposed

00:34:00.287 --> 00:34:02.287
to be to make everybody more productive.

00:34:02.287 --> 00:34:05.287
But programmers are not more productive

00:34:05.287 --> 00:34:07.287
now than they used to be.

00:34:07.287 --> 00:34:09.287
In fact, it looks to me like productivity

00:34:09.287 --> 00:34:12.287
per programmer is approaching zero. And,

00:34:12.287 --> 00:34:14.287
if that's true, then where is the proof

00:34:14.287 --> 00:34:15.287
that going up this ladder of abstraction

00:34:15.287 --> 00:34:18.287
further and further is really helping?. So,

00:34:18.287 --> 00:34:20.287
the way to at least, you know, get a feel

00:34:20.287 --> 00:34:23.287
for this is you look at a company, like

00:34:23.287 --> 00:34:26.286
you know Twitter or Facebook. It employs

00:34:26.286 --> 00:34:28.286
a lot of people. And you look at their

00:34:28.286 --> 00:34:29.286
product and you say, how much does that

00:34:29.286 --> 00:34:31.286
product change from year to year? right?

00:34:31.286 --> 00:34:34.286
How much functionality is added to

00:34:34.286 --> 00:34:36.286
Twitter year after year? How much

00:34:36.286 --> 00:34:39.286
functionality is added to Facebook? It's

00:34:39.286 --> 00:34:40.286
not that much, right?

00:34:40.286 --> 00:34:42.286
And then just divide by the number of

00:34:42.286 --> 00:34:44.286
engineers at the company, right? Which is

00:34:44.286 --> 00:34:47.286
thousands or tens of thousands sometimes.

00:34:47.286 --> 00:34:50.286
That's a very small number when you do

00:34:50.286 --> 00:34:52.286
that division, right? It's it's gonna be

00:34:52.286 --> 00:34:56.286
pretty close to zero. So, what's going on?

00:34:56.286 --> 00:34:58.286
Right? And to illustrate again the

00:34:58.286 --> 00:35:00.286
difference in productivity, and that it's

00:35:00.286 --> 00:35:03.286
not just me that thinks this, I'm gonna

00:35:03.286 --> 00:35:05.286
show an excerpt from an interview with

00:35:05.286 --> 00:35:07.286
Ken Thompson, who is the original author

00:35:07.286 --> 00:35:10.286
of the UNIX operating system. And he's

00:35:10.286 --> 00:35:12.286
talking about the time at Bell

00:35:12.286 --> 00:35:14.286
Laboratories when he first started

00:35:14.286 --> 00:35:17.286
making UNIX on a computer that by modern

00:35:17.286 --> 00:35:19.486
standards had like no software at all, right?

00:35:22.780 --> 00:35:27.286
Ken Thompson: "(At) some point I realized, without

00:35:27.286 --> 00:35:29.285
knowing it up until that point, that I

00:35:29.285 --> 00:35:33.285
was three weeks from an operating system.

00:35:33.285 --> 00:35:37.285
With three programs one a week: An editor, I needed

00:35:37.285 --> 00:35:41.285
to write code. I needed an

00:35:41.285 --> 00:35:45.285
assembler, to turn the code into language

00:35:45.285 --> 00:35:48.285
I could run. And I needed a little kernel,

00:35:48.285 --> 00:35:51.285
kind of an overlay, call it an operating

00:35:51.285 --> 00:35:55.285
system. And luckily, right at that moment

00:35:55.285 --> 00:36:00.285
my wife went on a three-week vacation

00:36:00.285 --> 00:36:07.285
to take my my one-year-old, roughly, to

00:36:07.285 --> 00:36:12.285
visit my in-laws who were in California.

00:36:12.285 --> 00:36:15.285
Disappeared, all alone and one week, one

00:36:15.285 --> 00:36:24.285
week, one week, and we had Unix".

00:36:24.285 --> 00:36:27.285
Brian Kernighan: "Yeah, I think programmers aren't quite as

00:36:27.285 --> 00:36:32.284
productive these days as they used to be" Yeah, he says

00:36:32.284 --> 00:36:34.284
programmers aren't productive these days

00:36:34.284 --> 00:36:36.284
like that, and everybody laughs. But it's

00:36:36.284 --> 00:36:38.284
funny, but it's not funny, right?

00:36:38.284 --> 00:36:39.284
It's really not funny when you

00:36:39.284 --> 00:36:43.284
consider, like, how much waste there must

00:36:43.284 --> 00:36:44.284
be in the difference between how

00:36:44.284 --> 00:36:46.284
productive people are and how productive

00:36:46.284 --> 00:36:48.284
they could be, if everything wasn't so

00:36:48.284 --> 00:36:52.284
messed up, right? So I've made a case that

00:36:52.284 --> 00:36:54.284
robustness of software is declining,

00:36:54.284 --> 00:36:57.284
productivity of programmers is declining.

00:36:57.284 --> 00:36:59.284
So, if you're gonna say that actual

00:36:59.284 --> 00:37:00.284
technology of software is somehow

00:37:00.284 --> 00:37:03.284
advancing, it seems contrary to those two

00:37:03.284 --> 00:37:06.284
facts, right? So I think the argument that

00:37:06.284 --> 00:37:08.284
software is advancing is clearly false.

00:37:08.284 --> 00:37:11.284
Except again maybe in tiny local

00:37:11.284 --> 00:37:14.284
bubble-like areas. So, now why is it so

00:37:14.284 --> 00:37:16.284
bad? Why is it so hard to write programs?

00:37:16.284 --> 00:37:19.284
Why are we so miserable when we try to

00:37:19.284 --> 00:37:22.284
write programs today? It's because we're

00:37:22.284 --> 00:37:24.284
adding too much complication to

00:37:24.284 --> 00:37:27.284
everything, right? And I have a way that I

00:37:27.284 --> 00:37:30.284
think about this called: "you can't just", right?

00:37:30.284 --> 00:37:32.284
When there's all kinds of things

00:37:32.284 --> 00:37:33.283
that you used to be able to do on a

00:37:33.283 --> 00:37:36.283
computer that you can't do today, right?

00:37:36.283 --> 00:37:39.283
So today you can't just copy a program

00:37:39.283 --> 00:37:41.283
from one computer to another and have it

00:37:41.283 --> 00:37:43.283
work, right? You need to have an installer.

00:37:43.283 --> 00:37:46.283
Or like a flatpack on Linux, or like

00:37:46.283 --> 00:37:48.283
containers if you're a server Hacker News

00:37:48.283 --> 00:37:52.283
guy, right? And so people think this

00:37:52.283 --> 00:37:54.283
is cool. Now we have containers, that's an

00:37:54.283 --> 00:37:56.283
advantage or it's an advancement of

00:37:56.283 --> 00:37:59.283
software technology. All containers are

00:37:59.283 --> 00:38:01.283
doing is get us back to the 1960s, when

00:38:01.283 --> 00:38:02.283
we didn't have to do any of this stuff.

00:38:02.283 --> 00:38:04.283
Except it's actually not because it's

00:38:04.283 --> 00:38:05.283
adding all these steps that you have to

00:38:05.283 --> 00:38:09.283
do, right? And things you have to maintain.

00:38:09.283 --> 00:38:11.283
So now let's think of it for a second,

00:38:11.283 --> 00:38:13.283
like, why do you need an installer to

00:38:13.283 --> 00:38:16.283
install software? Is it because of the

00:38:16.283 --> 00:38:19.283
CPU? Not really, like, imagine you have

00:38:19.283 --> 00:38:22.283
well, you know, imagine you have some x64

00:38:22.283 --> 00:38:24.283
machine code and don't worry about how

00:38:24.283 --> 00:38:26.283
you got it into a computer's memory. But

00:38:26.283 --> 00:38:28.283
you just got it there, and you just jump

00:38:28.283 --> 00:38:30.283
to it. You set the program counter to

00:38:30.283 --> 00:38:32.283
that code. That code is going to do the

00:38:32.283 --> 00:38:35.283
same thing on a Windows PC, as it does on

00:38:35.283 --> 00:38:37.282
a Mac, as it does on a Linux machine.

00:38:37.282 --> 00:38:39.282
It does on an Xbox as it does on a

00:38:39.282 --> 00:38:42.282
Playstation 4 all, right? Because all of

00:38:42.282 --> 00:38:47.282
those systems use compatible CPUs. So,

00:38:47.282 --> 00:38:49.282
what's the installer for? The Installer

00:38:49.282 --> 00:38:51.282
is to get around the incompatibilities

00:38:51.282 --> 00:38:53.282
that we added at the OS layer. Which is

00:38:53.282 --> 00:38:56.282
this immensely complex thing that we

00:38:56.282 --> 00:39:00.282
mostly don't want, actually. And so, we

00:39:00.282 --> 00:39:02.282
tend to think about operating systems as

00:39:02.282 --> 00:39:05.282
adding capabilities to a system, to

00:39:05.282 --> 00:39:06.282
the system of the hardware and the

00:39:06.282 --> 00:39:08.282
software. But they also remove

00:39:08.282 --> 00:39:11.282
capabilities, like, compatibility, right?

00:39:11.282 --> 00:39:14.282
And it's often very arbitrary, and it it

00:39:14.282 --> 00:39:16.282
doesn't get any worse, than I think it

00:39:16.282 --> 00:39:18.282
does for us today when it comes to

00:39:18.282 --> 00:39:20.282
shading languages. Anyone who ships 3D

00:39:20.282 --> 00:39:21.282
engines is going to know what I'm

00:39:21.282 --> 00:39:23.282
talking about. So it used to be that if

00:39:23.282 --> 00:39:26.282
you wanted to compile a program for many

00:39:26.282 --> 00:39:28.282
platforms, you could write it in some

00:39:28.282 --> 00:39:31.282
portable language like C or C++, and you

00:39:31.282 --> 00:39:33.282
might have to do some little if Def's to

00:39:33.282 --> 00:39:35.282
modify it for the different platforms.

00:39:35.282 --> 00:39:37.282
But you could do that and it's mostly

00:39:37.282 --> 00:39:39.281
the same program. Today you can't do that

00:39:39.281 --> 00:39:41.281
because we've decided, if you're running

00:39:41.281 --> 00:39:43.281
a shader it needs to be in a different

00:39:43.281 --> 00:39:45.281
programming language on every single

00:39:45.281 --> 00:39:47.281
platform even if the hardware is the

00:39:47.281 --> 00:39:50.281
same, right? So if you have an x86 CPU, and

00:39:50.281 --> 00:39:54.281
an NVIDIA GPU, then on one OS you need to

00:39:54.281 --> 00:39:55.281
write your shader in metal shading

00:39:55.281 --> 00:39:57.281
language and on another OS you need to

00:39:57.281 --> 00:40:00.281
write in an HLSL, right? And they're

00:40:00.281 --> 00:40:02.281
different, even though they're the same,

00:40:02.281 --> 00:40:04.281
and so you either have to rewrite

00:40:04.281 --> 00:40:07.281
everything N times, where N is large, or

00:40:07.281 --> 00:40:09.281
you have to start using Auto translation

00:40:09.281 --> 00:40:13.281
systems to rewrite your shaders and

00:40:13.281 --> 00:40:14.281
those come with a lot of complexity and

00:40:14.281 --> 00:40:18.281
annoyance and bugs. And why, though? A

00:40:18.281 --> 00:40:21.281
shader is a simpler program than the old

00:40:21.281 --> 00:40:23.281
programs that we used to write. But why

00:40:23.281 --> 00:40:25.281
have we made it harder to build a

00:40:25.281 --> 00:40:27.281
simpler program? It doesn't make any

00:40:27.281 --> 00:40:27.281
sense.

00:40:27.281 --> 00:40:30.281
We don't care, righ? So the list of

00:40:30.281 --> 00:40:32.281
things you can't just do: You can't just

00:40:32.281 --> 00:40:34.281
copy a program. You can't just statically

00:40:34.281 --> 00:40:36.281
link. You can't just draw pixels to the

00:40:36.281 --> 00:40:38.281
screen. Oh my god, the number of steps you

00:40:38.281 --> 00:40:40.281
have to do to draw a pixel today is

00:40:40.281 --> 00:40:43.280
crazy. You can't just write a shader. You

00:40:43.280 --> 00:40:45.280
can't just compile a program on Windows

00:40:45.280 --> 00:40:48.280
without a manifest, and stuff. And on

00:40:48.280 --> 00:40:49.280
these new closed platforms, you can't

00:40:49.280 --> 00:40:51.280
just run an executable,

00:40:51.280 --> 00:40:52.280
unless it's signed through this, like,

00:40:52.280 --> 00:40:54.280
whole process, right? And all of these

00:40:54.280 --> 00:40:56.280
things, and many more that are not on

00:40:56.280 --> 00:41:00.280
this list add friction, bugs, time,

00:41:00.280 --> 00:41:02.280
engineering time, and headspace that

00:41:02.280 --> 00:41:05.280
keeps us from thinking about interesting

00:41:05.280 --> 00:41:09.280
things to actually do. A couple of

00:41:09.280 --> 00:41:10.280
examples of this, that illustrate this

00:41:10.280 --> 00:41:13.280
isn't going to end anytime soon have

00:41:13.280 --> 00:41:15.280
entered my own life. So one of my side

00:41:15.280 --> 00:41:18.280
projects is a compiler, and to compile

00:41:18.280 --> 00:41:20.280
programs you need to link them against

00:41:20.280 --> 00:41:21.280
libraries on people's machine. Like, for

00:41:21.280 --> 00:41:25.280
example, the Windows SDK and the C

00:41:25.280 --> 00:41:28.280
runtime library. And now different

00:41:28.280 --> 00:41:30.280
versions of things, install those in

00:41:30.280 --> 00:41:32.280
different places on the machine. And so

00:41:32.280 --> 00:41:34.280
you have to like be able to find them to

00:41:34.280 --> 00:41:37.280
do the linking. And rather than make this

00:41:37.280 --> 00:41:40.280
easy today Microsoft gives you a program

00:41:40.280 --> 00:41:42.280
called vswhere which you can find on

00:41:42.280 --> 00:41:45.279
github. And the job of vswhere is just

00:41:45.279 --> 00:41:46.279
to tell you where these libraries are

00:41:46.279 --> 00:41:50.279
installed. It is more than 7,000 lines of

00:41:50.279 --> 00:41:53.279
source code in 70 files, ok? And they

00:41:53.279 --> 00:41:55.279
didn't even try to bundle it as a

00:41:55.279 --> 00:41:57.279
library. It's a standalone program. So

00:41:57.279 --> 00:41:59.279
what they're thinking now is you can't

00:41:59.279 --> 00:42:02.279
just make a compiler that's a standalone

00:42:02.279 --> 00:42:04.279
program. It's obviously going to be a

00:42:04.279 --> 00:42:06.279
suite of applications, and once you have

00:42:06.279 --> 00:42:07.279
a suite of applications, what's one more?

00:42:07.279 --> 00:42:09.279
What's like a little vswhere we're hanging

00:42:09.279 --> 00:42:11.279
out in there, right? They're not even

00:42:11.279 --> 00:42:14.279
thinking that this would be bad. It's

00:42:14.279 --> 00:42:16.279
crazy. I made my own version of this

00:42:16.279 --> 00:42:18.279
based on some other people's work and

00:42:18.279 --> 00:42:20.279
got it down to like 500 lines of code.

00:42:20.279 --> 00:42:23.279
Which is still way too many to basically

00:42:23.279 --> 00:42:25.279
ask two questions, that should be two

00:42:25.279 --> 00:42:28.279
lines of code, right? So multiplier of 250.

00:42:28.279 --> 00:42:32.279
And then, in also in the programming

00:42:32.279 --> 00:42:34.279
language world, there's this thing called

00:42:34.279 --> 00:42:37.279
Language Server Protocol, that is pretty

00:42:37.279 --> 00:42:38.279
much the worst thing that I've ever

00:42:38.279 --> 00:42:40.279
heard of. And there are just proponents

00:42:40.279 --> 00:42:41.279
of this all over. They're building

00:42:41.279 --> 00:42:43.279
systems for this right now that are

00:42:43.279 --> 00:42:44.279
going to be living on your computer

00:42:44.279 --> 00:42:48.278
tomorrow or today already maybe. And as

00:42:48.278 --> 00:42:50.278
far as I can tell, it's basically a more

00:42:50.278 --> 00:42:54.278
complicated slower way to do libraries.

00:42:54.278 --> 00:42:56.278
So, say you've got an editor for some

00:42:56.278 --> 00:42:58.278
programming language and you want to be

00:42:58.278 --> 00:42:59.278
able to do stuff that we've been doing

00:42:59.278 --> 00:43:02.278
for decades already, like look up the

00:43:02.278 --> 00:43:04.278
declaration of an identifier by clicking

00:43:04.278 --> 00:43:04.278
on it, or

00:43:04.278 --> 00:43:07.278
tooltips that say like what type is this

00:43:07.278 --> 00:43:10.278
value, right? Well they say the way you

00:43:10.278 --> 00:43:13.278
should do that is you know you have your

00:43:13.278 --> 00:43:15.278
editor and then it's it's a hassle to

00:43:15.278 --> 00:43:17.278
make plugins, this is the made-up problem,

00:43:17.278 --> 00:43:19.278
it's a hassle to make plugins for all

00:43:19.278 --> 00:43:21.278
these different things. So in order to

00:43:21.278 --> 00:43:23.278
standardize, you're going to run a server

00:43:23.278 --> 00:43:25.278
on your machine and then your editor

00:43:25.278 --> 00:43:27.278
talks over a socket to the server and

00:43:27.278 --> 00:43:29.278
the server talks back and gives you the

00:43:29.278 --> 00:43:33.278
answer, right? Which has now turned your

00:43:33.278 --> 00:43:35.278
single program into a distributed system.

00:43:35.278 --> 00:43:38.278
But the the flaw in this whole line of

00:43:38.278 --> 00:43:40.278
thinking, that none of these people seems

00:43:40.278 --> 00:43:42.278
to actually, like, think about at all, is

00:43:42.278 --> 00:43:44.278
that there's nothing special about, like,

00:43:44.278 --> 00:43:46.278
looking up the location of an identifier in your...

00:43:46.278 --> 00:43:48.278
That's just an API like we

00:43:48.278 --> 00:43:54.277
have all the time for everything. So the

00:43:54.277 --> 00:43:57.277
obvious next step, if you're saying that

00:43:57.277 --> 00:43:58.277
we should architect our API's like this,

00:43:58.277 --> 00:44:01.277
is to do this for other tasks, right? So

00:44:01.277 --> 00:44:03.277
now your editors or whatever program is

00:44:03.277 --> 00:44:04.277
going to be talking to multiple of these

00:44:04.277 --> 00:44:06.277
things, and now if you ever want to

00:44:06.277 --> 00:44:08.277
author anything for this, you now have to

00:44:08.277 --> 00:44:11.277
author and debug components of a

00:44:11.277 --> 00:44:14.277
distributed system where state is not

00:44:14.277 --> 00:44:16.277
located in any central place, and we all

00:44:16.277 --> 00:44:18.277
know how fun that is, righ?t But of course

00:44:18.277 --> 00:44:20.277
libraries are not that simple, right?

00:44:20.277 --> 00:44:22.277
Libraries use other libraries, so what

00:44:22.277 --> 00:44:24.277
happens at that point, if you're running

00:44:24.277 --> 00:44:26.277
all these servers on your system? and who

00:44:26.277 --> 00:44:28.277
don't, you know, some of them are going to

00:44:28.277 --> 00:44:30.277
like go down, and like have to restart,

00:44:30.277 --> 00:44:32.277
and, people, are synchronizing with each

00:44:32.277 --> 00:44:34.277
other. No, this is a disaster, right? And

00:44:34.277 --> 00:44:36.277
people are actively building this right

00:44:36.277 --> 00:44:41.277
now. And meanwhile, while we're spending

00:44:41.277 --> 00:44:43.277
all this time over complicating stuff

00:44:43.277 --> 00:44:45.277
that we used to be able to do in 1960, in

00:44:45.277 --> 00:44:47.277
the games industry, we're not even able

00:44:47.277 --> 00:44:49.277
to do the things that we've needed to do

00:44:49.277 --> 00:44:52.276
forever. So, like today games can't run

00:44:52.276 --> 00:44:54.276
consistently in full-screen, as you see

00:44:54.276 --> 00:44:56.276
from the screenshot, and I don't wish to

00:44:56.276 --> 00:44:58.276
bag on that particular game, because we

00:44:58.276 --> 00:45:00.276
all put a lot of engineering work into

00:45:00.276 --> 00:45:01.276
trying to make our game run in

00:45:01.276 --> 00:45:03.276
full-screen. It's kind of embarrassing

00:45:03.276 --> 00:45:06.276
like, why, right? Also, it's actually

00:45:06.276 --> 00:45:08.276
impossible on a PC right now to render

00:45:08.276 --> 00:45:09.276
at a smooth frame rate. It is simply not

00:45:09.276 --> 00:45:12.276
possible no matter what you do. Alen

00:45:12.276 --> 00:45:14.276
Ladavac of Croteam has

00:45:14.276 --> 00:45:16.276
a talk at GDC and a paper about what you

00:45:16.276 --> 00:45:19.276
actually would need to do this. We just

00:45:19.276 --> 00:45:22.276
don't even have that capability which is

00:45:22.276 --> 00:45:25.276
insane, right? And yet we're spending all

00:45:25.276 --> 00:45:27.276
this effort on other things, and so this

00:45:27.276 --> 00:45:30.276
complication that's introduced into all

00:45:30.276 --> 00:45:32.276
of our systems and not only makes our

00:45:32.276 --> 00:45:33.276
lives difficult in the present when

00:45:33.276 --> 00:45:35.276
we're trying to build something, it

00:45:35.276 --> 00:45:37.276
accelerates the loss of knowledge over

00:45:37.276 --> 00:45:42.276
time, right? So first of all there's more

00:45:42.276 --> 00:45:44.276
to know when things are more complicated,

00:45:44.276 --> 00:45:46.276
and so if you talk about a job spread

00:45:46.276 --> 00:45:49.276
among many people, each individual person

00:45:49.276 --> 00:45:51.276
knows a smaller percent of what they

00:45:51.276 --> 00:45:53.276
need to do. They have a less global view

00:45:53.276 --> 00:45:55.275
which makes it harder to do good work,

00:45:55.275 --> 00:45:57.275
right? And harder to transmit their

00:45:57.275 --> 00:45:59.275
knowledge on to people in the future.

00:45:59.275 --> 00:46:01.275
Another thing that happens is that deep

00:46:01.275 --> 00:46:03.275
knowledge becomes replaced by trivia. So

00:46:03.275 --> 00:46:05.275
deep knowledge might be a general

00:46:05.275 --> 00:46:07.275
concept, like, here's how cache coherency

00:46:07.275 --> 00:46:09.275
works and that enables software to run

00:46:09.275 --> 00:46:11.275
fast on, like, different processors and

00:46:11.275 --> 00:46:14.275
stuff. And trivia is something like, well

00:46:14.275 --> 00:46:16.275
this sprite in Unity doesn't display

00:46:16.275 --> 00:46:18.275
properly for some reason, but we know we

00:46:18.275 --> 00:46:20.275
can fix it if you open this panel and

00:46:20.275 --> 00:46:22.275
toggle this boolean, and that fixes it

00:46:22.275 --> 00:46:24.275
for a while. But then some weeks later,

00:46:24.275 --> 00:46:25.275
for random reasons, the boolean

00:46:25.275 --> 00:46:27.275
mysteriously untoggles. So just make sure

00:46:27.275 --> 00:46:29.275
to check that before you ship and it'll

00:46:29.275 --> 00:46:31.275
be fine, right? And the reason that's

00:46:31.275 --> 00:46:32.275
trivial, is not only because it doesn't

00:46:32.275 --> 00:46:35.275
apply to anything else in the world. But

00:46:35.275 --> 00:46:37.275
it's also going to be outdated in six

00:46:37.275 --> 00:46:39.275
months when the next Unity comes out. And

00:46:39.275 --> 00:46:40.275
it's just offensive that we're spending

00:46:40.275 --> 00:46:43.275
our brainpower on these things, okay? And

00:46:43.275 --> 00:46:44.275
the third thing that happens is good

00:46:44.275 --> 00:46:47.275
information is drowned by noise. So if

00:46:47.275 --> 00:46:49.275
something is really hard to understand,

00:46:49.275 --> 00:46:51.275
the percentage of people who put the

00:46:51.275 --> 00:46:53.275
effort into understanding it is going to

00:46:53.275 --> 00:46:56.274
be small, and the harder it is, the

00:46:56.274 --> 00:46:58.274
smaller that percentage. And so if you

00:46:58.274 --> 00:47:00.274
ask people, or you learn at a school,  or

00:47:00.274 --> 00:47:03.274
you search on the web, your probability

00:47:03.274 --> 00:47:05.274
of getting a bad answer to the problem

00:47:05.274 --> 00:47:07.274
is much higher for more complicated

00:47:07.274 --> 00:47:09.274
things, than it is for less complicated

00:47:09.274 --> 00:47:11.274
things. And so the complication

00:47:11.274 --> 00:47:15.274
propagates and magnifies. So let's get

00:47:15.274 --> 00:47:16.274
back to this collapse of civilization

00:47:16.274 --> 00:47:19.274
stuff, right? The more complexity we put

00:47:19.274 --> 00:47:21.274
in our system, the less likely we are to

00:47:21.274 --> 00:47:23.274
survive a disaster, right? Because we have

00:47:23.274 --> 00:47:25.274
to maintain all that complexity. We're

00:47:25.274 --> 00:47:27.274
acting right now,

00:47:27.274 --> 00:47:29.274
like we believe that the upper limit of

00:47:29.274 --> 00:47:32.274
what we can handle is infinity amount of

00:47:32.274 --> 00:47:33.274
complexity, right?

00:47:33.274 --> 00:47:35.274
But I don't think that makes any sense.

00:47:35.274 --> 00:47:37.274
So what's the upper limit? how would we

00:47:37.274 --> 00:47:41.274
decide how much complexity we can handle?

00:47:41.274 --> 00:47:44.274
And that's different from what people

00:47:44.274 --> 00:47:46.274
today actually can handle. So if you have

00:47:46.274 --> 00:47:49.274
an engineer who can hold a whole system

00:47:49.274 --> 00:47:50.274
in his head that's really complicated

00:47:50.274 --> 00:47:52.274
and work on it. When that guy quits and

00:47:52.274 --> 00:47:54.274
needs to pass on his job to somebody new,

00:47:54.274 --> 00:47:57.274
he's not necessarily going to be able to

00:47:57.274 --> 00:47:59.273
communicate all that, right? So the amount

00:47:59.273 --> 00:48:00.273
of complexity we can sustain over time,

00:48:00.273 --> 00:48:02.273
is less than the amount of complexity

00:48:02.273 --> 00:48:05.273
that individuals can do today, right? So

00:48:05.273 --> 00:48:07.273
why am I talking about this at a games

00:48:07.273 --> 00:48:09.273
conference, right? Like, everybody knows

00:48:09.273 --> 00:48:11.273
that games aren't serious and whatever,

00:48:11.273 --> 00:48:14.273
right? But video games at least used to

00:48:14.273 --> 00:48:17.273
be about maximizing what the machine

00:48:17.273 --> 00:48:19.273
could do, and, like, really impressing the

00:48:19.273 --> 00:48:21.273
people playing the game. And maximizing

00:48:21.273 --> 00:48:23.273
the machine means you have to understand

00:48:23.273 --> 00:48:24.273
the Machine very well. And that

00:48:24.273 --> 00:48:27.273
correlates with robust software, because

00:48:27.273 --> 00:48:29.273
if you understand the machine well,

00:48:29.273 --> 00:48:32.273
you're less likely to make the kind of

00:48:32.273 --> 00:48:34.273
bugs that come from misunderstanding.

00:48:34.273 --> 00:48:36.273
There's anti correlations with robust

00:48:36.273 --> 00:48:41.273
software too, but, anyway, now we're not

00:48:41.273 --> 00:48:43.273
really about that so much. Especially

00:48:43.273 --> 00:48:45.273
talking about independent developers.

00:48:45.273 --> 00:48:47.273
People are shifting to Unity and Unreal

00:48:47.273 --> 00:48:50.273
and must, right? Not very many people

00:48:50.273 --> 00:48:53.273
write their own engines anymore. So we

00:48:53.273 --> 00:48:54.273
have entire generations of programmers

00:48:54.273 --> 00:48:57.273
who have grown up learning to program by,

00:48:57.273 --> 00:49:00.273
you know, making little C# snippets

00:49:00.273 --> 00:49:03.272
that just plug into other parts of Unity

00:49:03.272 --> 00:49:04.272
or something. And they've never written

00:49:04.272 --> 00:49:06.272
something systemic, and they've never

00:49:06.272 --> 00:49:09.272
written something low-level. Which on the

00:49:09.272 --> 00:49:11.272
one hand is fine, like, I'm not saying we

00:49:11.272 --> 00:49:13.272
shouldn't do that. Because there's a

00:49:13.272 --> 00:49:14.272
degree to which it's smart, it reduces

00:49:14.272 --> 00:49:18.272
development time, right? It helps you ship

00:49:18.272 --> 00:49:24.272
your game sooner. But, like I said before,

00:49:24.272 --> 00:49:26.272
there's a flip side. That flip side is

00:49:26.272 --> 00:49:29.272
giving up the capability of doing the

00:49:29.272 --> 00:49:31.272
other thing. Giving up the knowledge of

00:49:31.272 --> 00:49:33.272
how to do the other thing. So I don't

00:49:33.272 --> 00:49:36.272
think it's bad in isolation if a lot of

00:49:36.272 --> 00:49:38.272
people make games where they just put

00:49:38.272 --> 00:49:40.272
snippets into Unity, right? But if

00:49:40.272 --> 00:49:41.272
everybody

00:49:41.272 --> 00:49:43.272
does that, then nobody knows how to do

00:49:43.272 --> 00:49:46.272
anything but that. And then after a while

00:49:46.272 --> 00:49:49.272
what's gonna happen? Because we're

00:49:49.272 --> 00:49:50.272
assuming that we'll just be able to use

00:49:50.272 --> 00:49:53.272
these engines forever. But Unity and

00:49:53.272 --> 00:49:55.272
Unreal were created in an environment

00:49:55.272 --> 00:49:58.272
where there were lots of people at games

00:49:58.272 --> 00:50:00.272
companies making engines all the time,

00:50:00.272 --> 00:50:03.272
right? And that's where they hired people

00:50:03.272 --> 00:50:05.271
from, and when there's no longer a

00:50:05.271 --> 00:50:07.271
natural way to learn how to make engines,

00:50:07.271 --> 00:50:09.271
because nobody does it, where are Unity

00:50:09.271 --> 00:50:11.271
and Unreal gonna hire employees from to

00:50:11.271 --> 00:50:13.271
maintain those engines that everybody's

00:50:13.271 --> 00:50:16.271
using? Right? And you know to the extent

00:50:16.271 --> 00:50:18.271
that they can hire people, is the quality

00:50:18.271 --> 00:50:20.271
of people gonna go down because they

00:50:20.271 --> 00:50:21.271
have less experience. It just takes a

00:50:21.271 --> 00:50:25.271
long time to ramp up, right? So then maybe

00:50:25.271 --> 00:50:27.271
at some point, well, certainly at some

00:50:27.271 --> 00:50:29.271
point there's not enough people to make

00:50:29.271 --> 00:50:31.271
a new competing engine. But maybe even at

00:50:31.271 --> 00:50:33.271
some point you can't really maintain the

00:50:33.271 --> 00:50:35.271
old ones and they just keep decaying

00:50:35.271 --> 00:50:37.271
over time, that can happen. And so the way

00:50:37.271 --> 00:50:39.271
I used to think about game developers is,

00:50:39.271 --> 00:50:42.271
kind of like the Foundation in the

00:50:42.271 --> 00:50:44.271
Asimov books where we kind of knew how

00:50:44.271 --> 00:50:47.271
to really program computers and, you know,

00:50:47.271 --> 00:50:48.271
also some other kinds of programmers

00:50:48.271 --> 00:50:50.271
like embedded systems people, and high

00:50:50.271 --> 00:50:52.271
performance computing people, all sort of

00:50:52.271 --> 00:50:55.271
knew what was going on with computers

00:50:55.271 --> 00:50:57.271
and after the rest of software just kind

00:50:57.271 --> 00:50:59.271
of decays and falls apart, we still have

00:50:59.271 --> 00:51:00.271
the knowledge and we could bring it back

00:51:00.271 --> 00:51:03.271
and give it to people. But I'm not really

00:51:03.271 --> 00:51:04.271
sure that that's gonna happen now.

00:51:04.271 --> 00:51:09.270
Because I just don't know, I mean, I don't

00:51:09.270 --> 00:51:10.270
know if there will be enough of us

00:51:10.270 --> 00:51:13.270
doing low-level work, or even people

00:51:13.270 --> 00:51:14.270
doing high-level work who understand

00:51:14.270 --> 00:51:16.270
what's happening at the low-level while

00:51:16.270 --> 00:51:19.270
they do the high-level, right? So, maybe

00:51:19.270 --> 00:51:21.270
there needs to be a second Foundation.

00:51:21.270 --> 00:51:23.270
Spoiler alert for anyone who hasn't read

00:51:23.270 --> 00:51:28.270
the book. So back in the Bronze Age, right?

00:51:28.270 --> 00:51:29.270
One of the reasons those civilizations

00:51:29.270 --> 00:51:31.270
disappeared, is that the way things were

00:51:31.270 --> 00:51:34.270
set up was that reading and writing was

00:51:34.270 --> 00:51:36.270
only done by a small elite class who

00:51:36.270 --> 00:51:38.270
went, you know, went to school for years,

00:51:38.270 --> 00:51:40.270
and this was protected. The public

00:51:40.270 --> 00:51:42.270
couldn't know how to do this, they

00:51:42.270 --> 00:51:45.270
probably mostly didn't want to know. And

00:51:45.270 --> 00:51:47.270
because those skills weren't widespread

00:51:47.270 --> 00:51:48.270
they were fragile, so when the society

00:51:48.270 --> 00:51:51.270
was disrupted they weren't continued

00:51:51.270 --> 00:51:52.270
because not enough people could carry it

00:51:52.270 --> 00:51:53.270
forward. Today,

00:51:53.270 --> 00:51:56.270
almost nobody knows what's happening

00:51:56.270 --> 00:51:58.270
on a CPU, right? That skill is not

00:51:58.270 --> 00:51:59.270
widespread.

00:51:59.270 --> 00:52:02.270
So it's fragile and so do we think that

00:52:02.270 --> 00:52:04.270
this immensely complicated thing that

00:52:04.270 --> 00:52:06.270
we've built today is somehow more robust

00:52:06.270 --> 00:52:08.270
than what they had in the Bronze Age

00:52:08.270 --> 00:52:10.269
with just making bronze, because that

00:52:10.269 --> 00:52:12.269
didn't survive. If that didn't survive,

00:52:12.269 --> 00:52:14.269
why do we think what we're doing now is

00:52:14.269 --> 00:52:17.269
gonna survive? Right? And we might have

00:52:17.269 --> 00:52:19.269
some similar stressors, we might have

00:52:19.269 --> 00:52:21.269
some climate change issues, right? Or you

00:52:21.269 --> 00:52:23.269
might have some new stuff, like what

00:52:23.269 --> 00:52:25.269
happens if there's so many cyber attacks

00:52:25.269 --> 00:52:26.269
that countries just start cutting each

00:52:26.269 --> 00:52:29.269
other off the internet? Right? Now lots of

00:52:29.269 --> 00:52:31.269
people in lots of countries can't get to

00:52:31.269 --> 00:52:33.269
StackOverflow to figure out how to copy

00:52:33.269 --> 00:52:34.269
and paste their code, so their code

00:52:34.269 --> 00:52:37.269
production is impacted, right? or what

00:52:37.269 --> 00:52:39.269
happens if China just says: "you know what?,

00:52:39.269 --> 00:52:40.269
we're just gonna keep all the CPUs, now

00:52:40.269 --> 00:52:43.269
we don't want to sell you any"? What's

00:52:43.269 --> 00:52:45.269
gonna happen, right? None of these things

00:52:45.269 --> 00:52:48.269
in isolation, I don't think, will bring

00:52:48.269 --> 00:52:50.269
down civilization. But it can certainly

00:52:50.269 --> 00:52:53.269
hit the system with a big shock. And if

00:52:53.269 --> 00:52:55.269
the system is too complex, it may not

00:52:55.269 --> 00:52:59.269
survive that shock very well. And so I'm

00:52:59.269 --> 00:53:02.269
just trying to say, like Elon Musk was

00:53:02.269 --> 00:53:04.269
saying, the technology by itself will

00:53:04.269 --> 00:53:07.269
degrade and we need to, as soon as we can,

00:53:07.269 --> 00:53:09.269
start working against this, right? At

00:53:09.269 --> 00:53:12.268
every level that we have access to, we

00:53:12.268 --> 00:53:14.268
have to simplify the hardware we're

00:53:14.268 --> 00:53:15.268
running on. We have to simplify the

00:53:15.268 --> 00:53:17.268
operating systems we use, the libraries

00:53:17.268 --> 00:53:19.268
we use, the application code we write, the

00:53:19.268 --> 00:53:21.268
communication systems we do this over,

00:53:21.268 --> 00:53:23.268
like the internet. We have to simplify

00:53:23.268 --> 00:53:25.268
how we compile, debug, and distribute

00:53:25.268 --> 00:53:27.268
software. And we have to simplify how

00:53:27.268 --> 00:53:29.268
people interface with software. And that

00:53:29.268 --> 00:53:31.268
sounds like really a lot of stuff to do,

00:53:31.268 --> 00:53:34.268
but the good news is that all of these

00:53:34.268 --> 00:53:35.268
things are so ridiculously complicated

00:53:35.268 --> 00:53:38.268
right now, that it's very easy to find

00:53:38.268 --> 00:53:40.268
things to improve. Simplifying any of

00:53:40.268 --> 00:53:43.268
these systems only requires the will to

00:53:43.268 --> 00:53:46.268
do it, rather than a taste you have to

00:53:46.268 --> 00:53:48.268
have a taste to recognize how

00:53:48.268 --> 00:53:50.268
complicated things are and how they

00:53:50.268 --> 00:53:51.268
would be better if they weren't so

00:53:51.268 --> 00:53:54.268
complicated, ok? Now a lot of people are

00:53:54.268 --> 00:53:57.268
probably like ok, whatever. Software is

00:53:57.268 --> 00:53:58.268
complicated, but I don't believe

00:53:58.268 --> 00:54:00.268
civilization is gonna collapse or

00:54:00.268 --> 00:54:04.268
anything. And so you know maybe, maybe, but

00:54:04.268 --> 00:54:07.268
I would say if

00:54:07.268 --> 00:54:08.268
you're a programmer, you should care

00:54:08.268 --> 00:54:10.268
about this anyway because even just your

00:54:10.268 --> 00:54:14.267
own personal future. Like programmers are

00:54:14.267 --> 00:54:16.267
not that happy today, we're often very

00:54:16.267 --> 00:54:17.267
grumpy, and the reason we're grumpy is

00:54:17.267 --> 00:54:19.267
because we're doing stupid things all

00:54:19.267 --> 00:54:21.267
the time, instead of interesting things.

00:54:21.267 --> 00:54:24.267
And that's not gonna get better if we

00:54:24.267 --> 00:54:25.267
keep doing things the way that we do

00:54:25.267 --> 00:54:27.267
them, right? So you personally will be

00:54:27.267 --> 00:54:32.267
happier if we change the way we do

00:54:32.267 --> 00:54:33.267
things, and if we do things the way they

00:54:33.267 --> 00:54:35.267
are now, maybe the future is deeply

00:54:35.267 --> 00:54:37.267
mediocre in the way that America's space

00:54:37.267 --> 00:54:41.267
future was going to be deeply mediocre.

00:54:41.267 --> 00:54:44.267
Now, even if you just want to survive as

00:54:44.267 --> 00:54:46.267
just an individual game developer like

00:54:46.267 --> 00:54:48.267
you're thinking look I just want to get

00:54:48.267 --> 00:54:49.267
my game done

00:54:49.267 --> 00:54:53.267
I want to ship it, I want it to succeed

00:54:53.267 --> 00:54:56.267
financially, even if you just want to

00:54:56.267 --> 00:54:58.267
have a very limited scope of concern

00:54:58.267 --> 00:54:59.267
like that,

00:54:59.267 --> 00:55:01.267
removing complexity is still the right

00:55:01.267 --> 00:55:05.267
short-term play, even if it doesn't seem

00:55:05.267 --> 00:55:06.267
like it. I'm sure we all are very

00:55:06.267 --> 00:55:09.267
familiar with cases like, well we're

00:55:09.267 --> 00:55:11.267
gonna ship in five months and we're

00:55:11.267 --> 00:55:13.267
having a lot of problems with this

00:55:13.267 --> 00:55:15.267
particular system, it's really buggy, you

00:55:15.267 --> 00:55:17.266
know. It loses people's work all the time,

00:55:17.266 --> 00:55:20.266
whatever. But we just have to stick with

00:55:20.266 --> 00:55:22.266
it for five months and it'll be passed,

00:55:22.266 --> 00:55:25.266
it'll be history and that's good because

00:55:25.266 --> 00:55:27.266
rewriting it would be a lot of effort. It

00:55:27.266 --> 00:55:29.266
might delay shipping, and so we're gonna

00:55:29.266 --> 00:55:30.266
stick with it, we're gonna stick out the

00:55:30.266 --> 00:55:32.266
five months and that's always wrong.

00:55:32.266 --> 00:55:34.266
Because always what happens is it takes

00:55:34.266 --> 00:55:36.266
two years to ship instead of five months,

00:55:36.266 --> 00:55:38.266
and so the amount that you suffered from

00:55:38.266 --> 00:55:40.266
the system is way worse than it

00:55:40.266 --> 00:55:42.266
otherwise would have been. And maybe in

00:55:42.266 --> 00:55:44.266
fact, that system was a large ingredient

00:55:44.266 --> 00:55:48.266
in why it took so long to ship. So

00:55:48.266 --> 00:55:50.266
simplify and in simplifying your own

00:55:50.266 --> 00:55:55.266
code to solve your own local problems

00:55:55.266 --> 00:55:58.266
you're also building institutional

00:55:58.266 --> 00:56:00.266
knowledge about how to simplify. Which

00:56:00.266 --> 00:56:03.266
sounds really basic, but I would claim we

00:56:03.266 --> 00:56:05.266
don't even really have that anymore.

00:56:05.266 --> 00:56:08.266
Here's some references of videos you can

00:56:08.266 --> 00:56:11.266
watch if you're interested in this kind

00:56:11.266 --> 00:56:13.266
of topic: Casey Muratori video "The 30

00:56:13.266 --> 00:56:14.266
million line problem".

00:56:14.266 --> 00:56:17.266
Samo Burja video: "Civilizations:

00:56:17.266 --> 00:56:19.265
institutions, knowledge and the future". And

00:56:19.265 --> 00:56:19.265
the

00:56:19.265 --> 00:56:21.265
Eric Cline's video which I showed

00:56:21.265 --> 00:56:24.265
snapshots of earlier: "1177 BC, the year

00:56:24.265 --> 00:56:27.265
civilization collapsed". And that's all I

00:56:27.265 --> 00:56:29.265
have to say for now. Thank you for your

00:56:29.265 --> 00:56:34.265
time.